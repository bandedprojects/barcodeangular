{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-dialog/app-dialog.component.html","./src/app/app.component.html","./src/app/auth/login/login.component.html","./src/app/dashboard/barcode/barcode.component.html","./src/app/dashboard/batch/batch.component.html","./src/app/dashboard/batch/create-batch/create-batch.component.html","./src/app/dashboard/batch/prepare-batch/prepare-batch.component.html","./src/app/dashboard/batch/view-batch/view-batch.component.html","./src/app/dashboard/dashboard.component.html","./src/app/dashboard/quality-audit/modify-rejections/modify-rejections.component.html","./src/app/dashboard/quality-audit/reject-cylinders/reject-cylinders.component.html","./src/app/dashboard/quality-audit/rejected-cylinders/rejected-cylinders.component.html","./src/app/dashboard/reports/hstreports/hstreports.component.html","./src/app/dashboard/reports/pneumatic/pneumaticreport/pneumaticreport.component.html","./src/app/dashboard/reports/tareweight/tareweight.component.html","./src/app/navigation/header/header.component.html","./src/app/navigation/sidenav/sidenav.component.html","./src/app/app-dialog/app-dialog.component.css","./src/app/app-dialog/app-dialog.component.ts","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/auth/auth.guard.ts","./src/app/auth/auth.service.ts","./src/app/auth/login/login.component.css","./src/app/auth/login/login.component.ts","./src/app/auth/login/user.service.ts","./src/app/dashboard/barcode/barcode.component.css","./src/app/dashboard/barcode/barcode.component.ts","./src/app/dashboard/batch/batch.component.css","./src/app/dashboard/batch/batch.component.ts","./src/app/dashboard/batch/batch.service.ts","./src/app/dashboard/batch/create-batch/create-batch.component.css","./src/app/dashboard/batch/create-batch/create-batch.component.ts","./src/app/dashboard/batch/prepare-batch/prepare-batch.component.css","./src/app/dashboard/batch/prepare-batch/prepare-batch.component.ts","./src/app/dashboard/batch/view-batch/view-batch.component.css","./src/app/dashboard/batch/view-batch/view-batch.component.ts","./src/app/dashboard/dashboard.component.css","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/quality-audit/modify-rejections/modify-rejections.component.css","./src/app/dashboard/quality-audit/modify-rejections/modify-rejections.component.ts","./src/app/dashboard/quality-audit/reject-cylinders/reject-cylinders.component.css","./src/app/dashboard/quality-audit/reject-cylinders/reject-cylinders.component.ts","./src/app/dashboard/quality-audit/rejected-cylinders/rejected-cylinders.component.css","./src/app/dashboard/quality-audit/rejected-cylinders/rejected-cylinders.component.ts","./src/app/dashboard/reports/hstreports/hstreports.component.css","./src/app/dashboard/reports/hstreports/hstreports.component.ts","./src/app/dashboard/reports/pneumatic/pneumaticreport/pneumaticreport.component.css","./src/app/dashboard/reports/pneumatic/pneumaticreport/pneumaticreport.component.ts","./src/app/dashboard/reports/tareweight/tareweight.component.css","./src/app/dashboard/reports/tareweight/tareweight.component.ts","./src/app/material.module.ts","./src/app/navigation/header/header.component.css","./src/app/navigation/header/header.component.ts","./src/app/navigation/navlist.service.ts","./src/app/navigation/sidenav/sidenav.component.css","./src/app/navigation/sidenav/sidenav.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<h2 mat-dialog-title>{{title}}</h2>\\n\\n<mat-dialog-content>  \\n <p>{{ description}} </p>     \\n \\n</mat-dialog-content>\\n\\n<mat-dialog-actions>\\n    <button *ngIf=\\\"confirmDlg\\\" (click) = \\\"yes()\\\">Yes</button>\\n    <button *ngIf=\\\"confirmDlg\\\" (click) = \\\"close()\\\">No</button>\\n    <button *ngIf=\\\"!confirmDlg\\\" class=\\\"mat-raised-button\\\" [mat-dialog-close]=\\\"true\\\" (click)=\\\"close()\\\">OK</button>\\n    <!--<button class=\\\"mat-raised-button mat-primary\\\"(click)=\\\"save()\\\">Save</button> -->\\n</mat-dialog-actions>\\n\"","module.exports = \"<div fxLayout=\\\"column\\\" fxFlexFill>\\n<app-header *ngIf=\\\"isAuth\\\"></app-header>  \\n<mat-sidenav-container fxFlex fxLayout=\\\"column\\\">   \\n        <mat-sidenav #sidenav  mode=\\\"side\\\" opened  *ngIf=\\\"isAuth\\\"\\n        fixedInViewport=\\\"false\\\" fixedTopGap=\\\"0\\\"\\n        fixedBottomGap=\\\"0\\\">\\n            <mat-nav-list fxFlex fxLayout=\\\"column\\\">\\n                <a mat-list-item *ngFor=\\\"let panel of sideNav\\\" [routerLink]=\\\"panel.url\\\" routerLinkActive=\\\"active-list-item\\\"><mat-icon matListIcon></mat-icon>{{ panel.name }}</a>\\n            </mat-nav-list>\\n        </mat-sidenav>\\n     \\n        <mat-sidenav-content>\\n            <router-outlet></router-outlet>\\n        </mat-sidenav-content>\\n    </mat-sidenav-container>\\n</div>\"","module.exports = \"\\n\\n\\n\\n<section id=\\\"login_container\\\" fxLayout=\\\"row\\\" fxFlexFill fxLayoutAlign=\\\"space-evenly center\\\">\\n    <section id=\\\"login-left\\\" fxFlex=\\\"60%\\\">\\n \\n     </section>\\n     <section id=\\\"login-form\\\" fxFlex fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n         <mat-card fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start\\\">\\n             <mat-card-title>Account Login</mat-card-title>\\n             <mat-card-content>\\n                     <form fxLayout =\\\"column\\\" fxLayoutGap =\\\"10px\\\" fxLayoutAlign=\\\"start start\\\" [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                             <mat-form-field>\\n                             <input \\n                                 type=\\\"text\\\" \\n                                 matInput \\n                                 placeholder=\\\"User Name\\\"\\n                                 formControlName=\\\"username\\\"\\n                                 required>\\n                             </mat-form-field>\\n                             <mat-form-field>\\n                             <input \\n                                 type=\\\"password\\\" \\n                                 matInput \\n                                 placeholder=\\\"Password\\\"\\n                                 formControlName=\\\"password\\\"\\n                                 required\\n                                 minlength=\\\"6\\\">\\n                             </mat-form-field>    \\n                             <mat-error *ngIf=\\\"loginError\\\">{{loginError}}</mat-error>\\n                             <div fxLayout=\\\"row\\\" fxFlex fxLayoutGap=\\\"20px\\\" fxLayoutAlign=\\\"space-evenly center\\\">\\n                                 <mat-checkbox>Remember Me</mat-checkbox>\\n                                 <a href=\\\"#\\\">Forgot Password</a>\\n                             </div>                       \\n                             \\n                         \\n                             <button mat-raised-button color=\\\"primary\\\">Login</button>                           \\n                             \\n                     </form>\\n             </mat-card-content>\\n             \\n         </mat-card>    \\n     </section>    \\n </section>\\n \\n\"","module.exports = \"<section fxLayout=\\\"column\\\" fxFlex=\\\"100%\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap =\\\"30px\\\" >\\n    <section fxLayout fxFlex =\\\"100%\\\" fxLayoutAlign=\\\"center\\\">   \\n        <mat-card fxFlex=\\\"500px\\\">\\n            <mat-card-title></mat-card-title>              \\n                <mat-card-content >      \\n                <form fxLayout=\\\"column\\\" [formGroup]=\\\"printBarcodeForm\\\" (ngSubmit) = \\\"onSaveAndPrintClick()\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"10px\\\">         \\n                    <mat-form-field>\\n                        <input type=\\\"text\\\" matInput placeholder=\\\"Batch Name\\\" formControlName=\\\"batchname\\\" required>\\n                    </mat-form-field>\\n\\n                    <mat-form-field>\\n                        <input type=\\\"number\\\" matInput placeholder=\\\"Serial Number\\\" formControlName=\\\"serialnumber\\\" required>\\n                    </mat-form-field>\\n\\n                    <mat-form-field>\\n                        <input type=\\\"number\\\" matInput placeholder=\\\"Weight (In kg)\\\" formControlName=\\\"weight\\\" required>\\n                    </mat-form-field>\\n                    \\n                    <div fxLayout=\\\"row\\\" fxfill fxLayoutGap =\\\"20px\\\" fxLayoutAlign=\\\"space-evenly center\\\">\\n                        <button mat-raised-button color=\\\"primary\\\">Generate</button>\\n                    </div>    \\n                </form>     \\n                       \\n                </mat-card-content>\\n        </mat-card>\\n    </section>\\n    <section fxLayout fxFlex =\\\"100%\\\" fxLayoutAlign=\\\"center\\\" *ngIf=\\\"showBarCode\\\">\\n        <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"end\\\" fxFlex=\\\"500px\\\" style=\\\"text-align:right\\\">\\n            <div>\\n                    <button mat-raised-button color=\\\"primary\\\" [useExistingCss]=\\\"true\\\" printSectionId=\\\"barcode_div\\\" ngxPrint>Print</button>  \\n            </div>                  \\n        </div>                \\n    </section>  \\n\\n    <section id=\\\"barcode_section\\\" fxLayout fxFlex =\\\"100%\\\" fxLayoutAlign=\\\"center stretch\\\" *ngIf=\\\"showBarCode\\\" >              \\n            \\n        <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\" style=\\\"width:500px;height:285px;padding:0px;border:0px;\\\"> \\n            <div style=\\\"width:100%\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-evenly center\\\">\\n               <div> {{ printBarcodeForm.value.batch_name}} </div>\\n               <div> Weight: {{printBarcodeForm.value.weight}}</div>\\n            </div>\\n            <div id=\\\"barcode_div\\\" style=\\\"width:100%\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center stretch\\\">\\n                <ngx-barcode \\n                [bc-value]=\\\"serial_no\\\" \\n                [bc-display-value]=\\\"true\\\"\\n                [bc-text-align]=\\\"center\\\">\\n                </ngx-barcode>\\n            </div>\\n        </div>\\n    </section>    \\n\\n</section>\\n\"","module.exports = \"\"","module.exports = \"<section fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\n    <section fxLayout fxFlex =\\\"100%\\\" fxLayoutAlign=\\\"center\\\">   \\n        <mat-card fxFlex=\\\"500px\\\">\\n            <mat-card-title> Create Batch Form </mat-card-title>                  \\n                <mat-card-content style=\\\"padding:20px;\\\" >      \\n                <form fxLayout =\\\"column\\\" fxLayoutGap =\\\"10px\\\" fxLayoutAlign=\\\"center center\\\" [formGroup]=\\\"createBatchForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                        <mat-form-field>\\n                            <input type=\\\"text\\\" matInput placeholder=\\\"Batch Name\\\" formControlName=\\\"batchname\\\" required>\\n                        </mat-form-field>\\n                        <mat-form-field>\\n                            <input type=\\\"number\\\" matInput placeholder=\\\"Starting S/N\\\" formControlName=\\\"serial_start\\\" required>\\n                        </mat-form-field>\\n        \\n                        <mat-form-field>\\n                            <input type=\\\"number\\\" matInput placeholder=\\\"Ending S/N\\\" formControlName=\\\"serial_end\\\" required>\\n                        </mat-form-field>\\n        \\n                        <div fxLayout=\\\"row\\\" fxFill fxLayoutAlign=\\\"center center\\\">\\n                            <button mat-raised-button color=\\\"primary\\\">Create Batch</button>\\n                        </div>\\n                    </form>       \\n                </mat-card-content>      \\n        </mat-card>\\n    </section>\\n\\n    <!--<section id=\\\"create-batch-form\\\" class=\\\"mat-elevation-z8\\\" fxFlex fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">        \\n            <form fxLayout =\\\"column\\\" fxLayoutGap =\\\"10px\\\" fxLayoutAlign=\\\"center center\\\" [formGroup]=\\\"createBatchForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                <mat-form-field>\\n                    <input type=\\\"text\\\" matInput placeholder=\\\"Batch Name\\\" formControlName=\\\"batchname\\\" required>\\n                </mat-form-field>\\n                <mat-form-field>\\n                    <input type=\\\"number\\\" matInput placeholder=\\\"Starting S/N\\\" formControlName=\\\"serial_start\\\" required>\\n                </mat-form-field>\\n\\n                <mat-form-field>\\n                    <input type=\\\"number\\\" matInput placeholder=\\\"Ending S/N\\\" formControlName=\\\"serial_end\\\" required>\\n                </mat-form-field>\\n\\n                <div fxLayout=\\\"row\\\" fxfill fxLayoutGap =\\\"20px\\\" fxLayoutAlign=\\\"space-evenly center\\\">\\n                    <button mat-raised-button color=\\\"primary\\\">Create Batch</button>\\n                </div>\\n            </form>       \\n        </section>-->\\n    <!--<section id=\\\"create_batch_table\\\"  fxLayout=\\\"column\\\" class=\\\"mat-elevation-z8\\\">\\n        <section fxFlex fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center start\\\">\\n            <table mat-table [dataSource]=\\\"dataSource\\\">\\n                <ng-container matColumnDef=\\\"name\\\">\\n                    <th mat-header-cell *matHeaderCellDef> Name </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\"> \\n                      {{ element.name }}\\n                    </td>\\n                </ng-container>        \\n                <ng-container matColumnDef=\\\"sl_no_range\\\">\\n                    <th mat-header-cell *matHeaderCellDef> Serial No. Range </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.sl_no_range}} </td>\\n                </ng-container>      \\n      \\n                <ng-container matColumnDef=\\\"cylinders_count\\\">\\n                    <th mat-header-cell *matHeaderCellDef> No. of cylinders </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\"> \\n                      {{element.cylinders_count}}\\n                    </td>\\n                </ng-container>\\n                \\n                <ng-container matColumnDef=\\\"rejections_count\\\">\\n                    <th mat-header-cell *matHeaderCellDef> No. of rejections </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\"> \\n                       {{ element.rejections_count }}\\n                    </td>\\n                </ng-container>  \\n                \\n                <ng-container matColumnDef=\\\"status\\\">\\n                    <th mat-header-cell *matHeaderCellDef> Status </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\"> \\n                        {{element.status}}\\n                    </td>\\n                </ng-container>   \\n               \\n                \\n                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>         \\n            </table>\\n    </section> -->\\n</section>\\n\"","module.exports = \"<section fxLayout=\\\"column\\\" fxFlex=\\\"100%\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap =\\\"30px\\\" >\\n    <section fxLayout fxLayoutAlign=\\\"center\\\">   \\n        <mat-card fxFlex=\\\"500px\\\">\\n            <mat-card-title> Prepare Batch Form </mat-card-title>                  \\n                <mat-card-content style=\\\"padding:20px;\\\" >      \\n                <form fxLayout =\\\"column\\\" fxLayoutGap =\\\"10px\\\" fxLayoutAlign=\\\"center center\\\" [formGroup]=\\\"prepareBatchForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                        <mat-form-field>\\n                            <input type=\\\"text\\\" matInput placeholder=\\\"Batch Name\\\" formControlName=\\\"batch_name\\\" required>\\n                        </mat-form-field>\\n                        <mat-form-field>\\n                            <input type=\\\"number\\\" matInput placeholder=\\\"Starting S/N\\\" formControlName=\\\"starting_serial_no\\\" required>\\n                        </mat-form-field>\\n        \\n                        <mat-form-field>\\n                            <input type=\\\"number\\\" matInput placeholder=\\\"Ending S/N\\\" formControlName=\\\"ending_serial_no\\\" required>\\n                        </mat-form-field>\\n        \\n                        <div fxLayout=\\\"row\\\" fxFill fxLayoutAlign=\\\"center center\\\">\\n                            <button mat-raised-button color=\\\"primary\\\">Prepare Batch</button>\\n                        </div>\\n                    </form>       \\n                </mat-card-content>      \\n        </mat-card>\\n    </section>\\n    <section fxLayout fxFlex =\\\"100%\\\" fxLayoutAlign=\\\"center\\\" *ngIf=\\\"displayBatchSection\\\">\\n        <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxFlex=\\\"500px\\\">\\n            <div>\\n                    <button mat-raised-button color=\\\"primary\\\" [useExistingCss]=\\\"true\\\" printSectionId=\\\"prepare_batch_list\\\" ngxPrint>Print</button>  \\n            </div>                  \\n        </div>                \\n    </section>  \\n\\n    <section id=\\\"prepare_batch_list\\\" fxLayout fxLayoutAlign=\\\"center\\\" *ngIf=\\\"displayBatchSection\\\"  >   \\n        <mat-card fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxFlex=\\\"800px\\\">          \\n            <mat-card-content style=\\\"padding:20px\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\" >                                 \\n                    <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start start\\\">\\n                            <h1>{{batchName}}</h1>\\n                            <div>Date: {{ today | date}}</div>\\n                    </div>\\n                <table style=\\\"width:auto\\\" mat-table [dataSource]=\\\"dataSource\\\">\\n                    <ng-container matColumnDef=\\\"serial_no1\\\">\\n                        <th mat-header-cell *matHeaderCellDef> Serial No. </th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.serial_no1}} </td>\\n                    </ng-container>\\n            \\n                    <ng-container matColumnDef=\\\"audited1\\\">\\n                        <th mat-header-cell *matHeaderCellDef> Audited </th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> \\n                            <mat-checkbox *ngIf=\\\"element.audited1 != undefined\\\" [(ngModel)]=\\\"element.audited1\\\"></mat-checkbox> \\n                        </td>\\n                    </ng-container>        \\n        \\n                    <ng-container matColumnDef=\\\"serial_no2\\\">\\n                        <th mat-header-cell *matHeaderCellDef> Serial No. </th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.serial_no2}} </td>\\n                    </ng-container>\\n            \\n                    <ng-container matColumnDef=\\\"audited2\\\">\\n                        <th mat-header-cell *matHeaderCellDef> Audited </th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> \\n                            <mat-checkbox *ngIf=\\\"element.audited2 != undefined\\\" [(ngModel)]=\\\"element.audited2\\\"></mat-checkbox> \\n                        </td>\\n                    </ng-container>  \\n                    \\n                    <ng-container matColumnDef=\\\"serial_no3\\\">\\n                        <th mat-header-cell *matHeaderCellDef> Serial No. </th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.serial_no3}} </td>\\n                    </ng-container>\\n            \\n                    <ng-container matColumnDef=\\\"audited3\\\">\\n                        <th mat-header-cell *matHeaderCellDef> Audited </th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> \\n                            <mat-checkbox *ngIf=\\\"element.audited3 != undefined\\\" [(ngModel)]=\\\"element.audited3\\\"></mat-checkbox> \\n                        </td>\\n                    </ng-container>       \\n\\n                    <ng-container matColumnDef=\\\"serial_no4\\\">\\n                        <th mat-header-cell *matHeaderCellDef> Serial No. </th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.serial_no4}} </td>\\n                    </ng-container>\\n\\n                    <ng-container matColumnDef=\\\"audited4\\\">\\n                            <th mat-header-cell *matHeaderCellDef> Audited </th>\\n                            <td mat-cell *matCellDef=\\\"let element\\\"> \\n                                <mat-checkbox *ngIf=\\\"element.audited4 != undefined\\\" [(ngModel)]=\\\"element.audited4\\\"></mat-checkbox> \\n                            </td>\\n                        </ng-container>       \\n    \\n                        <ng-container matColumnDef=\\\"serial_no5\\\">\\n                            <th mat-header-cell *matHeaderCellDef> Serial No. </th>\\n                            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.serial_no5}} </td>\\n                        </ng-container>\\n            \\n                    <ng-container matColumnDef=\\\"audited5\\\">\\n                        <th mat-header-cell *matHeaderCellDef> Audited </th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> \\n                            <mat-checkbox *ngIf=\\\"element.audited5 != undefined\\\" [(ngModel)]=\\\"element.audited5\\\"></mat-checkbox> \\n                        </td>\\n                    </ng-container>       \\n                    <ng-container matColumnDef=\\\"serial_no6\\\">\\n                        <th mat-header-cell *matHeaderCellDef> Serial No. </th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.serial_no6}} </td>\\n                    </ng-container>\\n            \\n                    <ng-container matColumnDef=\\\"audited6\\\">\\n                        <th mat-header-cell *matHeaderCellDef> Audited </th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> \\n                            <mat-checkbox  *ngIf=\\\"element.audited6 != undefined\\\" [(ngModel)]=\\\"element.audited6\\\"></mat-checkbox> \\n                        </td>\\n                    </ng-container>       \\n                    \\n                    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>         \\n                </table>     \\n            </mat-card-content>          \\n        </mat-card>\\n    </section>\\n</section>\\n\\n<!--<section fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\n    <section id=\\\"prepare-batch-form\\\" class=\\\"mat-elevation-z8\\\" fxFlex fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center start\\\">\\n            <h2>Prepare Batch Form </h2>\\n            <hr/>\\n            <form fxLayout =\\\"column\\\" fxLayoutGap =\\\"10px\\\" fxLayoutAlign=\\\"center center\\\" [formGroup]=\\\"prepareBatchForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                <mat-form-field>\\n                    <input type=\\\"text\\\" matInput placeholder=\\\"Batch Name\\\" formControlName=\\\"batch_name\\\" required>\\n                </mat-form-field>\\n                <mat-form-field>\\n                    <input type=\\\"number\\\" matInput placeholder=\\\"Starting S/N\\\" formControlName=\\\"starting_serial_no\\\" required>\\n                </mat-form-field>\\n\\n                <mat-form-field>\\n                    <input type=\\\"number\\\" matInput placeholder=\\\"Ending S/N\\\" formControlName=\\\"ending_serial_no\\\" required>\\n                </mat-form-field>\\n\\n                <div fxLayout=\\\"row\\\" fxFill fxLayoutAlign=\\\"center center\\\">\\n                    <button mat-raised-button color=\\\"primary\\\">Prepare Batch</button>\\n                </div>\\n            </form>       \\n    </section>\\n    <section id=\\\"prepare_batch_print\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"end end\\\" *ngIf=\\\"displayBatchSection\\\">      \\n            <button mat-raised-button color=\\\"primary\\\" printSectionId=\\\"prepare_batch_list\\\" ngxPrint>Print</button>       \\n    </section>\\n\\n\\n    <section id=\\\"prepare_batch_list\\\"  *ngIf=\\\"displayBatchSection\\\" fxLayout=\\\"column\\\" class=\\\"mat-elevation-z8\\\">\\n        <section fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start start\\\">\\n            <h1>{{batchName}}</h1>\\n            <div>Date: {{ today | date}}</div>\\n        </section>\\n        <section fxFlex fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center start\\\">\\n        <table mat-table [dataSource]=\\\"dataSource\\\">\\n            <ng-container matColumnDef=\\\"serial_no\\\">\\n                <th mat-header-cell *matHeaderCellDef> Serial No. </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.serial_no}} </td>\\n            </ng-container>\\n  \\n            <ng-container matColumnDef=\\\"audited\\\">\\n                <th mat-header-cell *matHeaderCellDef> Audited </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> \\n                    <mat-checkbox  [(ngModel)]=\\\"element.audited\\\"></mat-checkbox> \\n                </td>\\n            </ng-container>        \\n\\n            <ng-container matColumnDef=\\\"serial_no1\\\">\\n                <th mat-header-cell *matHeaderCellDef> Serial No. </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.serial_no1}} </td>\\n            </ng-container>\\n  \\n            <ng-container matColumnDef=\\\"audited1\\\">\\n                <th mat-header-cell *matHeaderCellDef> Audited </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> \\n                    <mat-checkbox *ngIf=\\\"element.audited1 != undefined\\\" [(ngModel)]=\\\"element.audited1\\\"></mat-checkbox> \\n                </td>\\n            </ng-container>        \\n           \\n            \\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>         \\n        </table>\\n      \\n        </section>\\n       \\n    </section>\\n\\n</section>-->\\n\"","module.exports = \"\\n<section id=\\\"view_batch_list\\\" fxLayout fxLayoutAlign=\\\"center\\\"  fxFlex=\\\"100%\\\">  \\n        <mat-card fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxFlex=\\\"800px\\\">          \\n    <table mat-table [dataSource]=\\\"dataSource\\\">\\n        <ng-container matColumnDef=\\\"batchname\\\">\\n            <th mat-header-cell *matHeaderCellDef> Batch Name </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.batchname}} </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"serial_start\\\">\\n            <th mat-header-cell *matHeaderCellDef> Serial Start </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.serial_start}}</td>\\n        </ng-container>        \\n\\n        <ng-container matColumnDef=\\\"serial_end\\\">\\n            <th mat-header-cell *matHeaderCellDef> Serial End </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">{{element.serial_end}} </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"total_cylinders\\\">\\n            <th mat-header-cell *matHeaderCellDef> Total Cylinders </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.total_cylinders}}</td>            \\n        </ng-container> \\n        \\n        <!--<ng-container matColumnDef=\\\"audited1\\\">\\n            <th mat-header-cell *matHeaderCellDef> Number of Rejections </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> </td>            \\n        </ng-container>-->   \\n       \\n        \\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>         \\n    </table>\\n   <!-- <table style=\\\"border-left: 1px solid #e0e0e0;\\\" mat-table [dataSource]=\\\"dataSource | slice:500:1000\\\">\\n            <ng-container matColumnDef=\\\"serial_no\\\" sticky>\\n                <th mat-header-cell *matHeaderCellDef> Serial No. </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.serial_no}} </td>\\n            </ng-container>\\n            \\n            <ng-container matColumnDef=\\\"audited\\\" stickyEnd>\\n                <th mat-header-cell *matHeaderCellDef> Audited </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> \\n                    <mat-checkbox  [(ngModel)]=\\\"element.audited\\\"></mat-checkbox> \\n                </td>\\n            </ng-container>        \\n            \\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>         \\n        </table> -->\\n        </mat-card>\\n   \\n</section>\\n\"","module.exports = \"Dashboard works\\n\"","module.exports = \"<section fxLayout=\\\"column\\\" fxFlex=\\\"100%\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap =\\\"30px\\\" >\\n    <section fxLayout fxFlex =\\\"100%\\\" fxLayoutAlign=\\\"center\\\">   \\n        <mat-card fxFlex=\\\"500px\\\">\\n            <mat-card-title></mat-card-title>  \\n            \\n                <mat-card-content >      \\n                        <form [formGroup]=\\\"searchSerialNoForm\\\" (ngSubmit) = \\\"onSearchClick()\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"10px\\\">         \\n                    <mat-form-field>\\n                        <input type=\\\"text\\\" matInput placeholder=\\\"Serial Number\\\" formControlName=\\\"serialno\\\" required>\\n                    </mat-form-field>\\n                    \\n                    <div fxLayout=\\\"row\\\" fxfill fxLayoutGap =\\\"20px\\\" fxLayoutAlign=\\\"space-evenly center\\\">\\n                        <button mat-raised-button color=\\\"primary\\\">Search</button>\\n                    </div>    \\n                </form>           \\n                </mat-card-content>                           \\n            \\n        </mat-card>\\n    </section>\\n    <section fxLayout fxFlex =\\\"100%\\\" fxLayoutAlign=\\\"center\\\" *ngIf=\\\"showRejectForm\\\" >   \\n        <mat-card fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxFlex=\\\"500px\\\">          \\n                <mat-card-content > \\n                    <form  [formGroup]=\\\"modifyRejectionsForm\\\" (ngSubmit) = \\\"onRejectSubmit()\\\" fxLayout =\\\"column\\\" fxLayoutGap =\\\"10px\\\" fxLayoutAlign=\\\"center center\\\">\\n                            <mat-form-field>\\n                                    <input \\n                                        type=\\\"text\\\" \\n                                        matInput \\n                                        placeholder=\\\"Batch Name\\\"\\n                                        formControlName=\\\"batchname\\\"                                       \\n                                        required>\\n                                    </mat-form-field>\\n                                    <mat-form-field>\\n                                    <input \\n                                        type=\\\"text\\\" \\n                                        matInput \\n                                        placeholder=\\\"Serial number\\\"\\n                                        formControlName=\\\"serialnumber\\\"               \\n                                        required>\\n                                    </mat-form-field>    \\n                                    <mat-form-field fxLayout=\\\"column\\\">                                      \\n                                        <mat-select formControlName=\\\"status\\\"  placeholder=\\\"Status\\\">\\n                                            <mat-option *ngFor=\\\"let status of status_list\\\" [value]=\\\"status.value\\\">\\n                                            {{status.viewValue}}\\n                                            </mat-option>\\n                                        </mat-select>\\n                                    </mat-form-field>\\n                                    <mat-form-field fxLayout=\\\"column\\\">                                      \\n                                        <mat-select formControlName=\\\"rejectiontype\\\"  placeholder=\\\"Reject Reason\\\">\\n                                            <mat-option *ngFor=\\\"let rejection_type of rejection_types\\\" [value]=\\\"rejection_type.value\\\">\\n                                            {{rejection_type.viewValue}}\\n                                            </mat-option>\\n                                        </mat-select>\\n                                    </mat-form-field>\\n                                    <mat-form-field>\\n                                            <input \\n                                                type=\\\"text\\\" \\n                                                matInput \\n                                                placeholder=\\\"Comment\\\"\\n                                                formControlName=\\\"comments\\\"               \\n                                                required>\\n                                            </mat-form-field>    \\n                                    <div>\\n                                            <button mat-raised-button color=\\\"primary\\\">Reject</button>        \\n                                    </div>\\n                            \\n                    </form>\\n                        \\n                \\n                </mat-card-content>                           \\n            \\n        </mat-card>\\n    </section>\\n\\n   \\n</section>\\n\"","module.exports = \"<section fxLayout=\\\"column\\\" fxFlex=\\\"100%\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap =\\\"30px\\\" >\\n    <section fxLayout fxFlex =\\\"100%\\\" fxLayoutAlign=\\\"center\\\">   \\n        <mat-card fxFlex=\\\"500px\\\">\\n            <mat-card-title></mat-card-title>  \\n            \\n                <mat-card-content >      \\n                        <form [formGroup]=\\\"searchSerialNoForm\\\" (ngSubmit) = \\\"onSearchClick()\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"10px\\\">         \\n                    <mat-form-field>\\n                        <input type=\\\"text\\\" matInput placeholder=\\\"Serial Number\\\" formControlName=\\\"serialno\\\" required>\\n                    </mat-form-field>\\n                    \\n                    <div fxLayout=\\\"row\\\" fxfill fxLayoutGap =\\\"20px\\\" fxLayoutAlign=\\\"space-evenly center\\\">\\n                        <button mat-raised-button color=\\\"primary\\\">Search</button>\\n                    </div>    \\n                </form>           \\n                </mat-card-content>                           \\n            \\n        </mat-card>\\n    </section>\\n    <section fxLayout fxFlex =\\\"100%\\\" fxLayoutAlign=\\\"center\\\" *ngIf=\\\"showRejectForm\\\" >   \\n        <mat-card fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxFlex=\\\"500px\\\">          \\n                <mat-card-content > \\n                    <form  [formGroup]=\\\"rejectCylinderForm\\\" (ngSubmit) = \\\"onRejectSubmit()\\\" fxLayout =\\\"column\\\" fxLayoutGap =\\\"10px\\\" fxLayoutAlign=\\\"center center\\\">\\n                            <mat-form-field>\\n                                    <input \\n                                        type=\\\"text\\\" \\n                                        matInput \\n                                        placeholder=\\\"Batch Name\\\"\\n                                        formControlName=\\\"batchname\\\"                                       \\n                                        required>\\n                                    </mat-form-field>\\n                                    <mat-form-field>\\n                                    <input \\n                                        type=\\\"text\\\" \\n                                        matInput \\n                                        placeholder=\\\"Serial number\\\"\\n                                        formControlName=\\\"serialnumber\\\"               \\n                                        required>\\n                                    </mat-form-field>    \\n                                    <mat-form-field fxLayout=\\\"column\\\">\\n                                      \\n                                        <mat-select formControlName=\\\"rejectiontype\\\"  placeholder=\\\"Reject Reason\\\">\\n                                            <mat-option *ngFor=\\\"let rejection_type of rejection_types\\\" [value]=\\\"rejection_type.value\\\">\\n                                            {{rejection_type.viewValue}}\\n                                            </mat-option>\\n                                        </mat-select>\\n                                    </mat-form-field>\\n                                    <mat-form-field>\\n                                            <input \\n                                                type=\\\"text\\\" \\n                                                matInput \\n                                                placeholder=\\\"Comment\\\"\\n                                                formControlName=\\\"comments\\\"               \\n                                                required>\\n                                            </mat-form-field>    \\n                                    <div>\\n                                            <button mat-raised-button color=\\\"primary\\\">Reject</button>        \\n                                    </div>\\n                            \\n                    </form>\\n                        \\n                \\n                </mat-card-content>                           \\n            \\n        </mat-card>\\n    </section>\\n\\n   \\n</section>\\n         \\n                  \\n              \\n    \\n    \\n    \\n\\n    <!--        \\n\\n\\n    <section id=\\\"reject-cylinders-form\\\" fxFlex fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">        \\n        <form fxLayout =\\\"column\\\" fxLayoutGap =\\\"10px\\\" fxLayoutAlign=\\\"center center\\\" [formGroup]=\\\"rejectCylindersForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n            <mat-form-field>\\n                <input type=\\\"text\\\" matInput placeholder=\\\"Batch Name\\\" formControlName=\\\"batchname\\\" required>\\n            </mat-form-field>\\n            <mat-form-field>\\n                <input type=\\\"number\\\" matInput placeholder=\\\"Serial number\\\" formControlName=\\\"serial_number\\\" required>\\n            </mat-form-field>\\n\\n            <mat-form-field>\\n              \\n            </mat-form-field>\\n\\n            <div fxLayout=\\\"row\\\" fxfill fxLayoutGap =\\\"20px\\\" fxLayoutAlign=\\\"space-evenly center\\\">\\n                <button mat-raised-button color=\\\"primary\\\">Reject</button>\\n            </div>\\n        </form>   \\n    </section>    \\n</section>-->\\n\\n\\n\\n\"","module.exports = \"<section fxLayout=\\\"column\\\" fxFlex=\\\"100%\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap =\\\"30px\\\" >\\n    <section fxLayout fxFlex =\\\"100%\\\" fxLayoutAlign=\\\"center\\\">   \\n        <mat-card fxFlex=\\\"500px\\\">\\n            <mat-card-title></mat-card-title>  \\n            \\n                <mat-card-content >      \\n                        <form [formGroup]=\\\"searchBatchNameForm\\\" (ngSubmit) = \\\"onSearchClick()\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"10px\\\">         \\n                    <mat-form-field>\\n                        <input type=\\\"text\\\" matInput placeholder=\\\"Batch Name\\\" formControlName=\\\"batchname\\\" required>\\n                    </mat-form-field>\\n                    \\n                    <div fxLayout=\\\"row\\\" fxfill fxLayoutGap =\\\"20px\\\" fxLayoutAlign=\\\"space-evenly center\\\">\\n                        <button mat-raised-button color=\\\"primary\\\">Show</button>\\n                    </div>    \\n                </form>           \\n                </mat-card-content>\\n        </mat-card>\\n    </section>\\n   <!-- <section fxLayout fxFlex =\\\"100%\\\" fxLayoutAlign=\\\"center\\\" *ngIf=\\\"showRejectForm\\\" >   \\n        <mat-card fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxFlex=\\\"500px\\\">          \\n            <mat-card-content > \\n                <form  [formGroup]=\\\"rejectCylinderForm\\\" (ngSubmit) = \\\"onRejectSubmit()\\\" fxLayout =\\\"column\\\" fxLayoutGap =\\\"10px\\\" fxLayoutAlign=\\\"center center\\\">\\n                        <mat-form-field>\\n                        </mat-form-field>  \\n                </form>\\n            </mat-card-content>\\n        </mat-card>\\n    </section> -->\\n    \\n    <section id=\\\"rejected-cylinders\\\" fxLayout fxFlex =\\\"100%\\\" fxLayoutAlign=\\\"center\\\" *ngIf=\\\"displayRejectedCylinders\\\"  >   \\n            <mat-card fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxFlex=\\\"800px\\\">          \\n                <mat-card-content style=\\\"padding:20px\\\">\\n                    <div style=\\\"width:200px\\\">\\n                        <form [formGroup]=\\\"filterForm\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"10px\\\">  \\n                        <mat-form-field fxLayout=\\\"column\\\">                                      \\n                            <mat-select formControlName=\\\"filterValue\\\"  placeholder=\\\"Rejection Type\\\"  (selectionChange)=\\\"onFilterChange()\\\"> \\n                                <mat-option *ngFor=\\\"let rejection_type of rejection_types\\\" [value]=\\\"rejection_type\\\">\\n                                {{rejection_type}}\\n                                </mat-option>\\n                            </mat-select>\\n                        </mat-form-field>\\n                        </form>\\n                    </div>\\n                    <table style=\\\"width:100%\\\" mat-table [dataSource]=\\\"dataSource\\\">\\n                        <ng-container matColumnDef=\\\"position\\\">\\n                            <th mat-header-cell *matHeaderCellDef> No. </th>\\n                            <td mat-cell *matCellDef=\\\"let element; let i = index;\\\"> {{i+1}} </td>\\n                          </ng-container>\\n                        <ng-container matColumnDef=\\\"batchname\\\">\\n                            <th mat-header-cell *matHeaderCellDef> Batch Name </th>\\n                            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.batchname}} </td>\\n                        </ng-container>       \\n            \\n                        <ng-container matColumnDef=\\\"serial_number\\\">\\n                            <th mat-header-cell *matHeaderCellDef> Serial No. </th>\\n                            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.serial_number}} </td>\\n                        </ng-container>\\n\\n                        <ng-container matColumnDef=\\\"rejection_type\\\">\\n                            <th mat-header-cell *matHeaderCellDef> Rejection Type </th>\\n                            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.rejection_type}} </td>\\n                        </ng-container>\\n                        <ng-container matColumnDef=\\\"comments\\\">\\n                            <th mat-header-cell *matHeaderCellDef> Comments </th>\\n                            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.comments}} </td>\\n                        </ng-container>\\n                \\n                      \\n                        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>         \\n                    </table>     \\n                </mat-card-content>          \\n            </mat-card>\\n        </section> \\n</section>\"","module.exports = \"<section fxLayout=\\\"column\\\" fxFlex=\\\"100%\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap =\\\"30px\\\" >\\n    <section fxLayout fxFlex =\\\"100%\\\" fxLayoutAlign=\\\"center\\\">   \\n        <mat-card fxFlex=\\\"500px\\\">\\n            <mat-card-title></mat-card-title>  \\n            \\n                <mat-card-content >      \\n                <form [formGroup]=\\\"generateReportForm\\\" (ngSubmit) = \\\"onGenerateClick()\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"10px\\\">         \\n                    <mat-form-field>\\n                        <input type=\\\"text\\\" matInput placeholder=\\\"Enter Batch Name\\\" formControlName=\\\"batch_name\\\" required>\\n                    </mat-form-field>\\n                    \\n                    <div fxLayout=\\\"row\\\" fxfill fxLayoutGap =\\\"20px\\\" fxLayoutAlign=\\\"space-evenly center\\\">\\n                        <button mat-raised-button color=\\\"primary\\\">Generate Report</button>\\n                    </div>    \\n                </form>           \\n                </mat-card-content>\\n        </mat-card>\\n    </section>\\n\\n    <section fxLayout fxFlex =\\\"100%\\\" fxLayoutAlign=\\\"center\\\" *ngIf=\\\"showHSTReport\\\">\\n        <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"end\\\" fxFlex=\\\"800px\\\" style=\\\"text-align:right\\\">\\n            <div>\\n                    <button mat-raised-button color=\\\"primary\\\" [useExistingCss]=\\\"true\\\" printSectionId=\\\"hst_reports_div\\\" ngxPrint>Print</button>  \\n            </div>                  \\n        </div>                \\n    </section>  \\n\\n    <section fxLayout fxFlex =\\\"100%\\\" fxLayoutAlign=\\\"center\\\" *ngIf=\\\"showHSTReport\\\" >              \\n            \\n        <mat-card fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxFlex=\\\"800px\\\">          \\n            <mat-card-content style=\\\"padding:20px\\\" id=\\\"hst_reports_div\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\n                <div style=\\\"border:1px solid #000; border-bottom:0px;\\\" fxLayout=\\\"column\\\">\\n                    <div fxLayout=\\\"column\\\" style=\\\"width:100%\\\" fxLayoutAlign=\\\"center\\\" style=\\\"text-align:center\\\">   \\n                        <h3 class=\\\"mat-h3\\\" style=\\\"border-bottom:1px solid #000;margin-bottom:0px;\\\">KAIRALI STRUCTURAL FABRICATION PVT LTD</h3>\\n                    \\n                        <div class=\\\"mat-body\\\">SIDCO INDUSTRIAL PARK, ANGAMALY</div>                 \\n                    </div>\\n    \\n                    <div style=\\\"width:100%;padding:10px;padding-bottom:5px\\\" fxFlex=\\\"100%\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\" fxLayoutGap=\\\"20px\\\">\\n                        <div>\\n                            <div>\\n                                    STAGE: HST\\n                            </div>\\n                            <div>\\n                                BATCH NO: {{ batchName}}\\n                            </div>\\n                        \\n                        </div>\\n                        <div>\\n                            <div>\\n                                    Test Pressure: 12 Kg/Cm2    \\n                            </div>\\n                            <div>\\n                                Retention Time: 60 Sec\\n                            </div>\\n                        </div>\\n                        <div>\\n                            <div>\\n                                Date: \\n                            </div> \\n                            <div>\\n                                Inspected by: SOORAJ\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div style=\\\"width:100%;padding-left:10px; padding-bottom:10px;\\\" fxFlex=\\\"100%\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start\\\">\\n                        <div>\\n                            <span style=\\\"margin-right:10px\\\">Cylinder Sl No. From: {{ serial_start}}</span> <span> To: {{ serial_end}}</span> \\n                        </div>\\n                    </div>\\n                </div>\\n                \\n               \\n                \\n                <table style=\\\"width:auto\\\" mat-table [dataSource]=\\\"dataSource\\\" id=\\\"hst_reports\\\">\\n                    <ng-container matColumnDef=\\\"serial_no1\\\">\\n                        <th mat-header-cell *matHeaderCellDef> Sl No. </th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.serial_no1}} </td>\\n                    </ng-container>\\n            \\n                    <ng-container matColumnDef=\\\"status1\\\">\\n                        <th mat-header-cell *matHeaderCellDef> Result </th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.status1}} </td>\\n                    </ng-container> \\n                    \\n                    <ng-container matColumnDef=\\\"serial_no2\\\">\\n                        <th mat-header-cell *matHeaderCellDef> Sl No. </th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.serial_no2}} </td>\\n                    </ng-container>\\n            \\n                    <ng-container matColumnDef=\\\"status2\\\">\\n                        <th mat-header-cell *matHeaderCellDef> Result </th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.status2}} </td>\\n                    </ng-container>   \\n                    \\n                    <ng-container matColumnDef=\\\"serial_no3\\\">\\n                        <th mat-header-cell *matHeaderCellDef> Sl No. </th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.serial_no3}} </td>\\n                    </ng-container>\\n            \\n                    <ng-container matColumnDef=\\\"status3\\\">\\n                        <th mat-header-cell *matHeaderCellDef> Result </th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.status3}} </td>\\n                    </ng-container>   \\n                    \\n                    <ng-container matColumnDef=\\\"serial_no4\\\">\\n                        <th mat-header-cell *matHeaderCellDef> Sl No. </th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.serial_no4}} </td>\\n                    </ng-container>\\n            \\n                    <ng-container matColumnDef=\\\"status4\\\">\\n                        <th mat-header-cell *matHeaderCellDef> Result </th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.status4}} </td>\\n                    </ng-container>  \\n                    \\n                    <ng-container matColumnDef=\\\"serial_no5\\\">\\n                        <th mat-header-cell *matHeaderCellDef> Sl No. </th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.serial_no5}} </td>\\n                    </ng-container>\\n            \\n                    <ng-container matColumnDef=\\\"status5\\\">\\n                        <th mat-header-cell *matHeaderCellDef> Result </th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.status5}} </td>\\n                    </ng-container>       \\n\\n                    <ng-container matColumnDef=\\\"serial_no6\\\">\\n                        <th mat-header-cell *matHeaderCellDef> Sl No. </th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.serial_no6}} </td>\\n                    </ng-container>\\n            \\n                    <ng-container matColumnDef=\\\"status6\\\">\\n                        <th mat-header-cell *matHeaderCellDef> Result </th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.status6}} </td>\\n                    </ng-container>       \\n        \\n        \\n                    <!--<ng-container matColumnDef=\\\"serial_no1\\\">\\n                        <th mat-header-cell *matHeaderCellDef> Serial No. </th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.serial_no1}} </td>\\n                    </ng-container>\\n            \\n                    <ng-container matColumnDef=\\\"audited1\\\">\\n                        <th mat-header-cell *matHeaderCellDef> Result</th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> \\n                            <mat-checkbox *ngIf=\\\"element.audited1 != undefined\\\" [(ngModel)]=\\\"element.audited1\\\"></mat-checkbox> \\n                        </td>\\n                    </ng-container>   -->\\n            \\n                  \\n                    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>         \\n                </table>    \\n                <div style=\\\"border:1px solid #000; border-top:0px;\\\" fxLayout=\\\"column\\\">\\n                    <div style=\\\"width:100%;padding:10px;\\\" fxFlex=\\\"100%\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\" fxLayoutGap=\\\"20px\\\">\\n                        <div>\\n                            GE INSPECTOR: \\n                        </div> \\n                        <div>\\n                            QUALITY IN CHARGE: PRAVEEN R\\n                        </div>\\n                    </div>\\n                </div> \\n            </mat-card-content>          \\n        </mat-card>\\n    </section>\\n\\n   \\n</section>\\n\"","module.exports = \"<section fxLayout=\\\"column\\\" fxFlex=\\\"100%\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap =\\\"30px\\\" >\\n    <section fxLayout fxFlex =\\\"100%\\\" fxLayoutAlign=\\\"center\\\">   \\n        <mat-card fxFlex=\\\"500px\\\">\\n            <mat-card-title></mat-card-title>  \\n            \\n                <mat-card-content >      \\n                <form [formGroup]=\\\"generateReportForm\\\" (ngSubmit) = \\\"onGenerateClick()\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"10px\\\">         \\n                    <mat-form-field>\\n                        <input type=\\\"text\\\" matInput placeholder=\\\"Enter Batch Name\\\" formControlName=\\\"batch_name\\\" required>\\n                    </mat-form-field>\\n                    \\n                    <div fxLayout=\\\"row\\\" fxfill fxLayoutGap =\\\"20px\\\" fxLayoutAlign=\\\"space-evenly center\\\">\\n                        <button mat-raised-button color=\\\"primary\\\">Generate Report</button>\\n                    </div>    \\n                </form>           \\n                </mat-card-content>\\n        </mat-card>\\n    </section>\\n    <section fxLayout fxFlex =\\\"100%\\\" fxLayoutAlign=\\\"center\\\" *ngIf=\\\"showHSTReport\\\" >   \\n        <mat-card fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxFlex=\\\"800px\\\">          \\n            <mat-card-content style=\\\"padding:20px\\\" id=\\\"hst_reports_div\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\n                <div style=\\\"border:1px solid #000; border-bottom:0px;\\\" fxLayout=\\\"column\\\">\\n                    <div fxLayout=\\\"column\\\" style=\\\"width:100%\\\" fxLayoutAlign=\\\"center\\\" style=\\\"text-align:center\\\">   \\n                        <h3 class=\\\"mat-h3\\\" style=\\\"border-bottom:1px solid #000;margin-bottom:0px;\\\">KAIRALI STRUCTURAL FABRICATION PVT LTD</h3>\\n                    \\n                        <div class=\\\"mat-body\\\">SIDCO INDUSTRIAL PARK, ANGAMALY</div>                 \\n                    </div>\\n    \\n                    <div style=\\\"width:100%;padding:10px;\\\" fxFlex=\\\"100%\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\" fxLayoutGap=\\\"20px\\\">\\n                        <div>\\n                            <div>\\n                                    STAGE: Pneumatic\\n                            </div>\\n                            <div>\\n                                BATCH NO: {{ batchName}}\\n                            </div>\\n                        </div>\\n                        <div>\\n                            <div>\\n                                    Test Pressure: 12 Kg/Cm2    \\n                            </div>\\n                            <div>\\n                                Retention Time: 60 Sec\\n                            </div>\\n                        </div>\\n                        <div>\\n                            <div>\\n                                Date: \\n                            </div> \\n                            <div>\\n                                Inspected by: SOORAJ\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div style=\\\"width:100%;padding-left:10px; padding-bottom:10px;\\\" fxFlex=\\\"100%\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start\\\">\\n                        <div>\\n                            <span style=\\\"margin-right:10px\\\">Cylinder Sl No. From: {{ batch.serial_start}}</span> <span> To: {{ batch.serial_end}}</span> \\n                        </div>\\n                    </div>\\n                </div>\\n               \\n                \\n                <table style=\\\"width:auto\\\" mat-table [dataSource]=\\\"dataSource\\\" id=\\\"hst_reports\\\">\\n                    <ng-container matColumnDef=\\\"serial_no1\\\">\\n                        <th mat-header-cell *matHeaderCellDef> Sl No. </th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.serial_no1}} </td>\\n                    </ng-container>\\n            \\n                    <ng-container matColumnDef=\\\"status1\\\">\\n                        <th mat-header-cell *matHeaderCellDef> Result </th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.status1}} </td>\\n                    </ng-container> \\n                    \\n                    <ng-container matColumnDef=\\\"serial_no2\\\">\\n                        <th mat-header-cell *matHeaderCellDef> Sl No. </th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.serial_no2}} </td>\\n                    </ng-container>\\n            \\n                    <ng-container matColumnDef=\\\"status2\\\">\\n                        <th mat-header-cell *matHeaderCellDef> Result </th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.status2}} </td>\\n                    </ng-container>   \\n                    \\n                    <ng-container matColumnDef=\\\"serial_no3\\\">\\n                        <th mat-header-cell *matHeaderCellDef> Sl No. </th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.serial_no3}} </td>\\n                    </ng-container>\\n            \\n                    <ng-container matColumnDef=\\\"status3\\\">\\n                        <th mat-header-cell *matHeaderCellDef> Result </th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.status3}} </td>\\n                    </ng-container>   \\n                    \\n                    <ng-container matColumnDef=\\\"serial_no4\\\">\\n                        <th mat-header-cell *matHeaderCellDef> Sl No. </th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.serial_no4}} </td>\\n                    </ng-container>\\n            \\n                    <ng-container matColumnDef=\\\"status4\\\">\\n                        <th mat-header-cell *matHeaderCellDef> Result </th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.status4}} </td>\\n                    </ng-container>  \\n                    \\n                    <ng-container matColumnDef=\\\"serial_no5\\\">\\n                        <th mat-header-cell *matHeaderCellDef> Sl No. </th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.serial_no5}} </td>\\n                    </ng-container>\\n            \\n                    <ng-container matColumnDef=\\\"status5\\\">\\n                        <th mat-header-cell *matHeaderCellDef> Result </th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.status5}} </td>\\n                    </ng-container>       \\n\\n                    <ng-container matColumnDef=\\\"serial_no6\\\">\\n                        <th mat-header-cell *matHeaderCellDef> Sl No. </th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.serial_no6}} </td>\\n                    </ng-container>\\n            \\n                    <ng-container matColumnDef=\\\"status6\\\">\\n                        <th mat-header-cell *matHeaderCellDef> Result </th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.status6}} </td>\\n                    </ng-container>       \\n                    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>         \\n                </table>    \\n                <div style=\\\"border:1px solid #000; border-top:0px;\\\" fxLayout=\\\"column\\\">\\n                    <div style=\\\"width:100%;padding:10px;\\\" fxFlex=\\\"100%\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\" fxLayoutGap=\\\"20px\\\">\\n                        <div>\\n                            GE INSPECTOR: \\n                        </div> \\n                        <div>\\n                            QUALITY IN CHARGE: PRAVEEN R\\n                        </div>\\n                    </div>\\n                </div> \\n            </mat-card-content>          \\n        </mat-card>\\n    </section>\\n\\n   \\n</section>\\n\\n\"","module.exports = \"<p>tareweight works!</p>\\n\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n    <mat-toolbar-row>\\n      <div fxFlex fxLayout fxLayoutAlign=\\\"flex-start\\\" fxLayoutGap=\\\"20px\\\">\\n          <div fxFlex=\\\"30%\\\"><span> Kalliyath </span></div>\\n          <div *ngFor=\\\"let nav of navList\\\">\\n              <button mat-button (click)=\\\"navBarClick(nav);\\\" [routerLink]=\\\"nav.url\\\" [color]=\\\"nav.color\\\">{{ nav.title }}</button>\\n          </div>\\n         \\n      </div>\\n     \\n      <div fxFlex fxLayout fxLayoutAlign=\\\"flex-end\\\">\\n        <!--<ul fxLayout fxLayoutGap=\\\"20px\\\">\\n          <li fxHide.xs>\\n            <button mat-icon-button>\\n              <mat-icon>settings</mat-icon>\\n            </button>\\n          </li>\\n          <li fxHide.xs>\\n            <button mat-icon-button>\\n              <mat-icon>help_outline</mat-icon>\\n            </button>\\n          </li>\\n          <li>\\n            <button mat-icon-button>\\n              <mat-icon>person_outline</mat-icon>\\n            </button>\\n            <mat-menu #auth=\\\"matMenu\\\">\\n              <button mat-menu-item (click)=\\\"logout()\\\">\\n                <mat-icon>exit_to_app</mat-icon>\\n                <span>Sign out</span>\\n              </button>\\n            </mat-menu>\\n          </li>\\n    \\n        </ul>-->\\n\\n        <mat-menu #profileMenu=\\\"matMenu\\\">\\n          <button mat-menu-item (click)=\\\"onLogout()\\\">\\n            <mat-icon>exit_to_app</mat-icon>\\n            <span>Sign out</span>\\n          </button>\\n        </mat-menu>\\n\\n        <button mat-icon-button [matMenuTriggerFor]=\\\"profileMenu\\\">\\n          <mat-icon>person_outline</mat-icon>\\n        </button>\\n       \\n    \\n      </div>\\n    \\n    </mat-toolbar-row>\\n    \\n    </mat-toolbar>\\n\"","module.exports = \"\\n<mat-sidenav #sidenav  mode=\\\"side\\\" opened \\nfixedInViewport=\\\"false\\\" fixedTopGap=\\\"0\\\"\\nfixedBottomGap=\\\"0\\\">\\n    <mat-nav-list fxFlex fxLayout=\\\"column\\\">\\n    <a mat-list-item routerLink=\\\"/preparebatch\\\"> <mat-icon matListIcon>info</mat-icon>Prepare Batch</a>\\n    <a mat-list-item routerLink=\\\"/createbatch\\\"><mat-icon matListIcon>info</mat-icon>Create Batch</a>\\n    <a mat-list-item> <mat-icon matListIcon>info</mat-icon>View Batches</a>\\n    </mat-nav-list>\\n</mat-sidenav>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC1kaWFsb2cvYXBwLWRpYWxvZy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, Inject } from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\n//import { FormGroup, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-app-dialog',\n  templateUrl: './app-dialog.component.html',\n  styleUrls: ['./app-dialog.component.css']\n})\nexport class AppDialogComponent implements OnInit {  \n  description:string;\n  confirmDlg:boolean;\n\n  constructor(private dialogRef: MatDialogRef<AppDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) data) { \n      this.description = data.description;\n      this.confirmDlg = data.confirmDlg != undefined ? data.confirmDlg : false;\n    }\n\n  ngOnInit() {\n    /*this.form = this.fb.group({\n      description: [this.description, []]\n  });*/\n  }\n\n  save() {\n    //this.dialogRef.close(this.form.value);\n  }\n\n  close() {\n    this.dialogRef.close('close');\n  }  \n\n  yes() {\n    this.dialogRef.close('yes');\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './auth/login/login.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { AuthGuard } from './auth/auth.guard';\nimport { CreateBatchComponent } from './dashboard/batch/create-batch/create-batch.component';\nimport { PrepareBatchComponent } from './dashboard/batch/prepare-batch/prepare-batch.component';\nimport { ViewBatchComponent } from './dashboard/batch/view-batch/view-batch.component';\nimport { BatchComponent } from './dashboard/batch/batch.component';\nimport { RejectCylindersComponent } from './dashboard/quality-audit/reject-cylinders/reject-cylinders.component';\nimport { ModifyRejectionsComponent } from './dashboard/quality-audit/modify-rejections/modify-rejections.component';\nimport { RejectedCylindersComponent } from './dashboard/quality-audit/rejected-cylinders/rejected-cylinders.component';\nimport { HstreportsComponent } from './dashboard/reports/hstreports/hstreports.component';\nimport { PneumaticreportComponent } from './dashboard/reports/pneumatic/pneumaticreport/pneumaticreport.component';\nimport { BarcodeComponent } from './dashboard/barcode/barcode.component';\nimport { TareweightComponent } from './dashboard/reports/tareweight/tareweight.component';\n\nconst routes: Routes = [\n  {path: '', component: LoginComponent},\n  {path: 'login', component: LoginComponent},\n  {path: 'batch', component: BatchComponent, canActivate: [AuthGuard]},\n  {path: 'createbatch', component: CreateBatchComponent, canActivate: [AuthGuard]},\n  {path: 'preparebatch', component: PrepareBatchComponent, canActivate: [AuthGuard]},\n  {path: 'viewbatch', component: ViewBatchComponent, canActivate: [AuthGuard]},  \n  {path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard]},\n  {path: 'modifyrejections', component: ModifyRejectionsComponent, canActivate: [AuthGuard]},  \n  {path: 'rejectcylinders', component: RejectCylindersComponent, canActivate: [AuthGuard]},  \n  {path: 'rejectedcylinders', component: RejectedCylindersComponent, canActivate: [AuthGuard]},  \n  {path: 'hstreport', component: HstreportsComponent, canActivate: [AuthGuard]},  \n  {path: 'pneumaticreport', component: PneumaticreportComponent, canActivate: [AuthGuard]},\n  {path: 'tareweight', component: TareweightComponent, canActivate: [AuthGuard]},\n  {path: 'printbarcode', component: BarcodeComponent, canActivate: [AuthGuard]},\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes,{ useHash: true })],\n  exports: [RouterModule],\n  providers: [AuthGuard]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\nmat-sidenav {\\n    width: 200px;\\n  }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0lBQ0ksWUFBWTtFQUNkIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcbm1hdC1zaWRlbmF2IHtcbiAgICB3aWR0aDogMjAwcHg7XG4gIH1cbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './auth/auth.service';\nimport { NavListService } from \"./navigation/navlist.service\";\nimport { Subscription } from 'rxjs/Subscription';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'kalliyath';\n\n  isAuth:boolean;\n  authSubscription: Subscription;\n  navListSubscription: Subscription;\n  sideNav =  [];\n  \n\n  constructor(private authService: AuthService,private navListService: NavListService) { }\n\n  ngOnInit() {\n    this.authSubscription = this.authService.authChange.subscribe(authChange => {\n      this.isAuth = authChange;\n    });\n    //this.navList = this.navListService.getNavList('batches')\n   /*this.navListSubscription = this.navListService.navListChange.subscribe(navList => {\n      this.sideNav = navList.sidenav;\n    })*/\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      this.navListSubscription = this.navListService.navListChange.subscribe(navList => {\n        this.sideNav = navList.sidenav;\n      })\n    });\n  }  \n\n  ngOnDestroy() {\n    this.authSubscription.unsubscribe();\n    this.navListSubscription.unsubscribe();\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { FormsModule } from '@angular/forms';\nimport {NgxPrintModule} from 'ngx-print';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport { MaterialModule } from './material.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './auth/login/login.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { AuthService } from './auth/auth.service';\nimport { UserService } from './auth/login/user.service';\nimport { HeaderComponent } from './navigation/header/header.component';\nimport { SidenavComponent } from './navigation/sidenav/sidenav.component';\nimport { CreateBatchComponent } from './dashboard/batch/create-batch/create-batch.component';\nimport { PrepareBatchComponent } from './dashboard/batch/prepare-batch/prepare-batch.component';\nimport { BatchComponent } from './dashboard/batch/batch.component';\nimport { BatchService } from './dashboard/batch/batch.service';\nimport { NavListService } from \"./navigation/navlist.service\";\nimport { ViewBatchComponent } from './dashboard/batch/view-batch/view-batch.component';\nimport { AppDialogComponent } from './app-dialog/app-dialog.component';\nimport { RejectCylindersComponent } from './dashboard/quality-audit/reject-cylinders/reject-cylinders.component';\nimport { ModifyRejectionsComponent } from './dashboard/quality-audit/modify-rejections/modify-rejections.component';\nimport { RejectedCylindersComponent } from './dashboard/quality-audit/rejected-cylinders/rejected-cylinders.component';\nimport { HstreportsComponent } from './dashboard/reports/hstreports/hstreports.component';\nimport { PneumaticreportComponent } from './dashboard/reports/pneumatic/pneumaticreport/pneumaticreport.component';\nimport { BarcodeComponent } from './dashboard/barcode/barcode.component';\nimport { NgxBarcodeModule } from 'ngx-barcode';\nimport { TareweightComponent } from './dashboard/reports/tareweight/tareweight.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    DashboardComponent,\n    HeaderComponent,\n    SidenavComponent,\n    CreateBatchComponent,\n    PrepareBatchComponent,\n    ViewBatchComponent,\n    BatchComponent,\n    AppDialogComponent,\n    RejectCylindersComponent,\n    ModifyRejectionsComponent,\n    RejectedCylindersComponent,\n    HstreportsComponent,\n    PneumaticreportComponent,\n    BarcodeComponent,\n    TareweightComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    FlexLayoutModule,\n    MaterialModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    NgxPrintModule,\n    NgxBarcodeModule\n  ],\n  providers: [AuthService, BatchService,NavListService, UserService],\n  bootstrap: [AppComponent],\n  entryComponents: [AppDialogComponent]\n})\nexport class AppModule { }\n","import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\n\n@Injectable()\n\nexport class AuthGuard implements CanActivate {\n    constructor(private authService: AuthService, private router: Router) {\n\n    }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        if(this.authService.isAuth()) {\n            return true;\n        } else {\n            this.router.navigate(['/login']);\n        }\n    }\n}","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from './user.model';\nimport { Data } from '../data.model';\nimport { authData } from './auth-data.model';\n\n@Injectable()\n\nexport class AuthService {\n    authChange = new Subject<boolean>();\n    private user: User;\n\n    constructor(private router: Router,private http: HttpClient) {\n\n    }\n\n    login(data: any) {     \n        this.user = {\n            username: data.username,\n            userId: Math.round(Math.random() * 10000).toString()\n        };\n        this.authChange.next(true);\n        this.router.navigate(['/viewbatch']);\n        \n    }\n\n    logout() {\n       this.user = null; \n       this.authChange.next(false);\n       this.router.navigate(['']);\n    }\n\n    getUser() {\n        return { ...this.user }\n    }\n\n    isAuth() {\n        return this.user != null\n    }\n}","module.exports = \"mat-card {    \\n    display: block;\\n    margin-left: auto;\\n    margin-right: auto;\\n    padding:50px;\\n  }\\n\\n  #login_container {    \\n    height: 100%   \\n  }\\n\\n  section {\\n      vertical-align: middle\\n  }\\n\\n  mat-form-field {\\n    width: 300px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksY0FBYztJQUNkLGlCQUFpQjtJQUNqQixrQkFBa0I7SUFDbEIsWUFBWTtFQUNkOztFQUVBO0lBQ0U7RUFDRjs7RUFFQTtNQUNJO0VBQ0o7O0VBRUE7SUFDRSxZQUFZO0FBQ2hCIiwiZmlsZSI6InNyYy9hcHAvYXV0aC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWNhcmQgeyAgICBcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gICAgcGFkZGluZzo1MHB4O1xuICB9XG5cbiAgI2xvZ2luX2NvbnRhaW5lciB7ICAgIFxuICAgIGhlaWdodDogMTAwJSAgIFxuICB9XG5cbiAgc2VjdGlvbiB7XG4gICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlXG4gIH1cblxuICBtYXQtZm9ybS1maWVsZCB7XG4gICAgd2lkdGg6IDMwMHB4O1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from '../auth.service';\nimport { UserService } from './user.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  loginError: string = null;\n\n  constructor(private authService: AuthService, private userService: UserService) {\n\n  }\n\n  ngOnInit() {\n    this.loginForm = new FormGroup({\n      'username': new FormControl('', {validators: [Validators.required]}),\n      'password': new FormControl('', {validators: [Validators.required]})\n    })\n  }\n\n\n  onSubmit() {\n    this.userService.login({\n      username: this.loginForm.value.username, \n      password: this.loginForm.value.password\n    }).subscribe(\n      responseData => {\n        if(responseData.status && responseData.status == '1') {\n            this.authService.login(responseData.data);                        \n        } else {\n            this.loginError = \"Login Failiure\";\n        }\n      }                 \n    )\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from '../user.model';\nimport { authData } from '../auth-data.model';\n\n@Injectable()\n\nexport class UserService {\n    private user: User;\n\n    constructor(private http: HttpClient) {\n\n    }\n\n    login(authData: authData) {\n        return this.http.post<any>('/login',authData);\n    }\n    \n    getUser() {\n        return { ...this.user }\n    }\n\n    isAuth() {\n        return this.user != null\n    }\n}","module.exports = \"#barcode_section mart-card {\\n    padding:0px;\\n    background-color: gray;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkL2JhcmNvZGUvYmFyY29kZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksV0FBVztJQUNYLHNCQUFzQjtBQUMxQiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9iYXJjb2RlL2JhcmNvZGUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIiNiYXJjb2RlX3NlY3Rpb24gbWFydC1jYXJkIHtcbiAgICBwYWRkaW5nOjBweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBncmF5O1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { BatchService } from '../batch/batch.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AppDialogComponent } from 'src/app/app-dialog/app-dialog.component';\n\n@Component({\n  selector: 'app-barcode',\n  templateUrl: './barcode.component.html',\n  styleUrls: ['./barcode.component.css']\n})\nexport class BarcodeComponent implements OnInit {\n  printBarcodeForm: FormGroup;\n  batchesList = [];\n\n  serial_no;\n\n \n  showBarCode = false;\n\n\n  constructor(private batchService: BatchService, private dialog: MatDialog) { }\n\n  ngOnInit() {\n    this.printBarcodeForm = new FormGroup({\n      batchname: new FormControl('',Validators.required),\n      serialnumber: new FormControl('',Validators.required),\n      weight: new FormControl('',Validators.required)\n    });\n\n    this.batchService.getBatchList().subscribe(responseData => {\n      if(responseData.status == \"1\") {\n        this.batchesList = responseData.data.batches;\n      }\n    });  \n  }\n\n  onSaveAndPrintClick() {    \n    this.serial_no = this.printBarcodeForm.value.serialnumber;\n    let dialogConfig;\n \n    let batch = this.batchesList.find(element => element.batchname == this.printBarcodeForm.value.batchname)\n    let found = this.batchesList.find(element => (parseInt(element.serial_start) <= parseInt(this.serial_no) && parseInt(element.serial_end) >= parseInt(this.serial_no)));   \n\n    if(batch) {\n      if(found) {\n        let data = {\n          \"batchname\": this.printBarcodeForm.value.batchname\n        };\n        this.batchService.rejectedCylindersList(data).subscribe(responseData => {\n          let rejectionsList;\n          if(responseData.status == '1') {    \n            rejectionsList = responseData.data.rejectionslist\n            let rejected_batch = rejectionsList.find(element => element.serial_number == this.serial_no);\n            if(rejected_batch) {\n              dialogConfig = {\n                description: \"Rejected Serial Number.\"+this.serial_no\n              }\n              this.dialog.open(AppDialogComponent, { \n                data: dialogConfig\n              });              \n              return;\n            }\n          }  \n          \n          this.batchService.saveBarCode(this.printBarcodeForm.value).subscribe(responseData => {\n            if(responseData.status == '1') {\n              dialogConfig = {\n                description: \"Success.\"\n              }\n              this.dialog.open(AppDialogComponent, { \n                data: dialogConfig\n              });              \n\n            } else if(responseData.status == '3') {\n              let cylinder = responseData.data.cylindername;\n              dialogConfig = {\n                description: \"Tareweight exists for the cylinder \"+cylinder+\". Do you want to update\",\n                confirmDlg: true\n              };\n\n              const dialogRef = this.dialog.open(AppDialogComponent, { \n                data: dialogConfig\n              });    \n              \n              dialogRef.afterClosed().subscribe(result => {\n                if(result == 'yes') {\n                  this.batchService.updateBarCode(this.printBarcodeForm.value).subscribe(responseData => {\n                    if(responseData.status == '1') {\n                      dialogConfig = {\n                        description: \"Success.\"\n                      }\n                      this.dialog.open(AppDialogComponent, { \n                        data: dialogConfig\n                      });          \n                    }\n                  }); \n                }\n              });  \n\n            }\n           \n            return;\n          })\n           \n        })  \n      } else {\n        dialogConfig = {\n          description: \"Invalid Serial Number.\"\n        }\n      }\n    } else {\n      dialogConfig = {\n        description: \"Invalid Batch Name.\"\n      }\n    }\n\n    if(dialogConfig) {\n      let dialogRef = this.dialog.open(AppDialogComponent, { \n        data: dialogConfig\n      });\n      this.showBarCode = false;\n      return;\n    } \n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9iYXRjaC9iYXRjaC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { MatTableDataSource } from '@angular/material';\nimport { Batch } from './batch.model';\nimport { BatchService } from './batch.service';\n\n@Component({\n  selector: 'app-batch',\n  templateUrl: './batch.component.html',\n  styleUrls: ['./batch.component.css']\n})\n\nexport class BatchComponent implements OnInit {\n    \n  \n    constructor(private batchService: BatchService) { }\n  \n    ngOnInit() {\n    }\n    \n  \n  }\n  ","import { BatchItem } from './batch-item.model';\nimport { HttpClient } from '@angular/common/http';\nimport { Batch } from './batch.model';\n\nexport class BatchService {\n    private batchData: BatchItem[] = [];\n    private batch: Batch[] = [];\n\n    constructor(private http: HttpClient) {\n\n    }\n\n\n    getBatchDataSource() {\n        this.batch = [\n            {\n                name: \"test\",\n                sl_no_range: \"100-200\",\n                cylinders_count: 20,\n                rejections_count: 2,\n                status: \"on\"\n            }\n        ]\n        return this.batch.slice();\n    }\n\n    prepareReportDataSource(start: number, end: number, report: string, rejectionsList:any) {\n        this.batchData = [];\n        let batchItem;\n        let status = \"OK\";\n        let col_length =  Math.ceil((end - start)/6);\n        let start_row_sl_no = start;\n\n        for(let i=0;i<col_length;i++) {\n            batchItem = {};\n            \n            for(var j=1;j<=6;j++) {\n                let start_slno = start_row_sl_no + (j-1)*col_length;\n                if(start_slno > end) continue;\n                let rejectedSerialNo\n                if(rejectionsList.length) {\n                    rejectedSerialNo = rejectionsList.find(element => element.serial_number == start_slno);\n                }\n                \n                if(rejectedSerialNo != undefined && rejectedSerialNo.rejection_type == report) {\n                    status = \"REJECTED\";\n                } else {\n                    status = \"OK\"\n                }\n                let serial_no_index = \"serial_no\"+j;\n                let status_key = \"status\"+j;\n                batchItem = {\n                    ...batchItem,\n                    [serial_no_index]: start_slno,\n                    [status_key]: status\n                }\n                \n            }\n            this.batchData.push(batchItem);  \n            ++start_row_sl_no; \n            \n        }\n        \n        return this.batchData.slice();\n    }\n\n    prepareBatchDataSource(start:number,end:number) {\n        /*this.batchData = [];\n       let end_serial_no =  Math.floor((start + end)/6);\n\n       let serial_number1 =  end_serial_no+1;\n\n        for(let i= start; i <= end_serial_no;i++) {      \n            let batchItem;\n\n            if(serial_number1 > end) {\n                batchItem =  {\n                    serial_no: i,\n                    audited: false,\n                }\n            } else {\n                batchItem =  {\n                    serial_no: i,\n                    audited: false,\n                    serial_no1: serial_number1,\n                    audited1: false\n                }\n            }\n            this.batchData.push(batchItem);      \n            ++serial_number1;\n        }*/\n\n        this.batchData = [];\n        let batchItem;\n        \n        let col_length =  Math.ceil((end - start)/6);\n        let start_row_sl_no = start;\n\n        for(let i=0;i<col_length;i++) {\n            batchItem = {};\n            \n            for(var j=1;j<=6;j++) {\n                let start_slno = start_row_sl_no + (j-1)*col_length;\n                if(start_slno > end) continue;\n                let serial_no_index = \"serial_no\"+j;\n                let status_key = \"audited\"+j;\n                batchItem = {\n                    ...batchItem,\n                    [serial_no_index]: start_slno,\n                    [status_key]: false\n                }\n                \n            }\n            this.batchData.push(batchItem);  \n            ++start_row_sl_no; \n            \n        }\n        \n        return this.batchData.slice();\n\n        return this.batchData.slice();\n    }\n\n    createBatch(data:any) {\n        return this.http.post<any>('/createbatch',data);\n    }\n\n    getBatchList() {\n        return this.http.get<any>('/batches');\n    }\n\n    getBatch(id) {\n        return this.http.get<any>('/batches/'+id);\n    }\n\n    getLastSerial() {\n        return this.http.get<any>('/lastserial');\n    }\n\n    rejectCylinder(data:any) {\n        return this.http.post<any>('/rejectcilinder',data);\n    }\n\n    rejectedCylindersList(data:any) {\n        return this.http.post<any>('/rejectedcylinderlist',data);\n    }\n\n    saveBarCode(data:any) {\n        return this.http.post<any>('/tareweight',data);\n    }\n\n    updateBarCode(data:any) {\n        return this.http.post<any>('/tareweightupdate',data);\n    }\n\n    tareweightCylindersList(data:any) {\n        return this.http.post<any>('/tareweightcylinders',data)\n    }\n}","module.exports = \"table {\\n    width:100%\\n}\\n\\n#create-batch-form, #create_batch_table {\\n    width:50%;\\n    margin:50px;\\n    padding:20px;\\n    padding-top:0px;\\n    margin-top:10px;\\n}\\n\\n#create-batch-form {\\n    margin-top:20px;\\n}\\n\\ntd.mat-column-audited, td.mat-column-audited1  {\\n    background-color:rgb(234, 238, 241);\\n    text-align: center;\\n    padding-right:0px;\\n}\\n\\ntd {\\n    text-align: center;\\n}\\n\\n.mat-header-cell {\\n   \\n    text-align:center;\\n   }\\n\\ntd.mat-cell:last-of-type, td.mat-footer-cell:last-of-type, th.mat-header-cell:last-of-type {\\n    padding-right: 0px;\\n}\\n\\ntd.mat-cell:first-of-type, td.mat-footer-cell:first-of-type, th.mat-header-cell:first-of-type {\\n    padding-left:0px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkL2JhdGNoL2NyZWF0ZS1iYXRjaC9jcmVhdGUtYmF0Y2guY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJO0FBQ0o7O0FBRUE7SUFDSSxTQUFTO0lBQ1QsV0FBVztJQUNYLFlBQVk7SUFDWixlQUFlO0lBQ2YsZUFBZTtBQUNuQjs7QUFFQTtJQUNJLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxtQ0FBbUM7SUFDbkMsa0JBQWtCO0lBQ2xCLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLGtCQUFrQjtBQUN0Qjs7QUFFQTs7SUFFSSxpQkFBaUI7R0FDbEI7O0FBRUg7SUFDSSxrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxnQkFBZ0I7QUFDcEIiLCJmaWxlIjoic3JjL2FwcC9kYXNoYm9hcmQvYmF0Y2gvY3JlYXRlLWJhdGNoL2NyZWF0ZS1iYXRjaC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICAgIHdpZHRoOjEwMCVcbn1cblxuI2NyZWF0ZS1iYXRjaC1mb3JtLCAjY3JlYXRlX2JhdGNoX3RhYmxlIHtcbiAgICB3aWR0aDo1MCU7XG4gICAgbWFyZ2luOjUwcHg7XG4gICAgcGFkZGluZzoyMHB4O1xuICAgIHBhZGRpbmctdG9wOjBweDtcbiAgICBtYXJnaW4tdG9wOjEwcHg7XG59XG5cbiNjcmVhdGUtYmF0Y2gtZm9ybSB7XG4gICAgbWFyZ2luLXRvcDoyMHB4O1xufVxuXG50ZC5tYXQtY29sdW1uLWF1ZGl0ZWQsIHRkLm1hdC1jb2x1bW4tYXVkaXRlZDEgIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOnJnYigyMzQsIDIzOCwgMjQxKTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgcGFkZGluZy1yaWdodDowcHg7XG59XG5cbnRkIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5tYXQtaGVhZGVyLWNlbGwge1xuICAgXG4gICAgdGV4dC1hbGlnbjpjZW50ZXI7XG4gICB9XG5cbnRkLm1hdC1jZWxsOmxhc3Qtb2YtdHlwZSwgdGQubWF0LWZvb3Rlci1jZWxsOmxhc3Qtb2YtdHlwZSwgdGgubWF0LWhlYWRlci1jZWxsOmxhc3Qtb2YtdHlwZSB7XG4gICAgcGFkZGluZy1yaWdodDogMHB4O1xufVxuXG50ZC5tYXQtY2VsbDpmaXJzdC1vZi10eXBlLCB0ZC5tYXQtZm9vdGVyLWNlbGw6Zmlyc3Qtb2YtdHlwZSwgdGgubWF0LWhlYWRlci1jZWxsOmZpcnN0LW9mLXR5cGUge1xuICAgIHBhZGRpbmctbGVmdDowcHg7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { Router} from '@angular/router';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { MatTableDataSource, MatDialog } from '@angular/material';\nimport { Batch } from '../batch.model';\nimport { BatchService } from '../batch.service';\nimport { AppDialogComponent } from '../../../app-dialog/app-dialog.component';\n\n@Component({\n  selector: 'app-create-batch',\n  templateUrl: './create-batch.component.html',\n  styleUrls: ['./create-batch.component.css']\n})\nexport class CreateBatchComponent implements OnInit {\n  createBatchForm: FormGroup;\n  batchName = \"\";\n  displayedColumns: string[] = ['name', 'sl_no_range','cylinders_count','rejections_count', 'status'];  \n  //dataSource = new BehaviorSubject([]);\n  dataSource = new MatTableDataSource<Batch>();\n  lastSerialNumber = 0;\n  \n  batch: Batch[] = [];\n  displayBatchSection = false;\n\n  constructor(private batchService: BatchService, private dialog: MatDialog, private router: Router) { }\n\n  ngOnInit() {\n    this.createBatchForm = new FormGroup({\n      batchname: new FormControl(''),\n      serial_start: new FormControl(''),\n      serial_end: new FormControl('')\n    });  \n    this.dataSource.data = this.batchService.getBatchDataSource();\n\n    this.batchService.getLastSerial().subscribe(responseData => {\n      if(responseData.data.lastserialnuber) {\n        this.lastSerialNumber = responseData.data.lastserialnuber;\n        this.createBatchForm.patchValue({\n          serial_start: this.lastSerialNumber\n        });\n        //this.createBatchForm.get('serial_start').disable();\n      }      \n    })\n  }\n\n  onSubmit() {\n    this.batchService.createBatch(this.createBatchForm.value)\n      .subscribe(responseData => {\n        var dialogConfig = {};\n        if(responseData.status == '1') {\n          dialogConfig = {\n            description: \"Batch has been created successfully.\"\n          }\n        } else if(responseData.status == '0') {\n          dialogConfig = {\n            description: \"Duplicate Batch name.\"\n          }\n        }\n\n        let dialogRef = this.dialog.open(AppDialogComponent, { \n          data: dialogConfig\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n          this.router.navigate(['/viewbatch']);\n        });\n      });\n  }\n  \n\n}\n","module.exports = \"\\n#prepare_batch_list, #prepare-batch-form, #prepare_batch_print {    \\n    padding-top:0px;\\n    margin-top:10px;\\n}\\n\\n#prepare-batch-form {\\n    margin:20px;\\n    padding:20px;\\n}\\n\\nmat-form-field.mat-form-field {\\n    width: 400px;\\n}\\n\\n/*td.mat-column-audited, td.mat-column-audited1  {\\n    background-color:rgb(234, 238, 241);\\n    text-align: center;\\n    padding-right:0px;\\n}\\n\\ntd {\\n    text-align: center;\\n}\\n\\n.mat-header-cell {\\n   \\n    text-align:center;\\n   }\\n\\ntd.mat-cell:last-of-type, td.mat-footer-cell:last-of-type, th.mat-header-cell:last-of-type {\\n    padding-right: 0px;\\n}\\n\\ntd.mat-cell:first-of-type, td.mat-footer-cell:first-of-type, th.mat-header-cell:first-of-type {\\n    padding-left:0px;\\n}*/\\n\\ntable {\\n    border-left: 1px solid #000;\\n    border-top: 1px solid #000;\\n}\\n\\n#prepare_batch_list th, #prepare_batch_list td {\\n    color: #000;\\n    border-right:1px solid #000;\\n    border-bottom: 1px solid #000;  \\n    width: 70px;    \\n    padding: 0px 5px;    \\n    text-align: center;\\n}\\n\\n#prepare_batch_list th {\\n    font-weight: bold;    \\n}\\n\\n#prepare_batch_list tr {\\n    height: 20px\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkL2JhdGNoL3ByZXBhcmUtYmF0Y2gvcHJlcGFyZS1iYXRjaC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtJQUNJLGVBQWU7SUFDZixlQUFlO0FBQ25COztBQUVBO0lBQ0ksV0FBVztJQUNYLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxZQUFZO0FBQ2hCOztBQUVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7RUFxQkU7O0FBRUY7SUFDSSwyQkFBMkI7SUFDM0IsMEJBQTBCO0FBQzlCOztBQUNBO0lBQ0ksV0FBVztJQUNYLDJCQUEyQjtJQUMzQiw2QkFBNkI7SUFDN0IsV0FBVztJQUNYLGdCQUFnQjtJQUNoQixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxpQkFBaUI7QUFDckI7O0FBRUE7SUFDSTtBQUNKIiwiZmlsZSI6InNyYy9hcHAvZGFzaGJvYXJkL2JhdGNoL3ByZXBhcmUtYmF0Y2gvcHJlcGFyZS1iYXRjaC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG4jcHJlcGFyZV9iYXRjaF9saXN0LCAjcHJlcGFyZS1iYXRjaC1mb3JtLCAjcHJlcGFyZV9iYXRjaF9wcmludCB7ICAgIFxuICAgIHBhZGRpbmctdG9wOjBweDtcbiAgICBtYXJnaW4tdG9wOjEwcHg7XG59XG5cbiNwcmVwYXJlLWJhdGNoLWZvcm0ge1xuICAgIG1hcmdpbjoyMHB4O1xuICAgIHBhZGRpbmc6MjBweDtcbn1cblxubWF0LWZvcm0tZmllbGQubWF0LWZvcm0tZmllbGQge1xuICAgIHdpZHRoOiA0MDBweDtcbn1cblxuLyp0ZC5tYXQtY29sdW1uLWF1ZGl0ZWQsIHRkLm1hdC1jb2x1bW4tYXVkaXRlZDEgIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOnJnYigyMzQsIDIzOCwgMjQxKTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgcGFkZGluZy1yaWdodDowcHg7XG59XG5cbnRkIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5tYXQtaGVhZGVyLWNlbGwge1xuICAgXG4gICAgdGV4dC1hbGlnbjpjZW50ZXI7XG4gICB9XG5cbnRkLm1hdC1jZWxsOmxhc3Qtb2YtdHlwZSwgdGQubWF0LWZvb3Rlci1jZWxsOmxhc3Qtb2YtdHlwZSwgdGgubWF0LWhlYWRlci1jZWxsOmxhc3Qtb2YtdHlwZSB7XG4gICAgcGFkZGluZy1yaWdodDogMHB4O1xufVxuXG50ZC5tYXQtY2VsbDpmaXJzdC1vZi10eXBlLCB0ZC5tYXQtZm9vdGVyLWNlbGw6Zmlyc3Qtb2YtdHlwZSwgdGgubWF0LWhlYWRlci1jZWxsOmZpcnN0LW9mLXR5cGUge1xuICAgIHBhZGRpbmctbGVmdDowcHg7XG59Ki9cblxudGFibGUge1xuICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgIzAwMDtcbiAgICBib3JkZXItdG9wOiAxcHggc29saWQgIzAwMDtcbn1cbiNwcmVwYXJlX2JhdGNoX2xpc3QgdGgsICNwcmVwYXJlX2JhdGNoX2xpc3QgdGQge1xuICAgIGNvbG9yOiAjMDAwO1xuICAgIGJvcmRlci1yaWdodDoxcHggc29saWQgIzAwMDtcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgIzAwMDsgIFxuICAgIHdpZHRoOiA3MHB4OyAgICBcbiAgICBwYWRkaW5nOiAwcHggNXB4OyAgICBcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbiNwcmVwYXJlX2JhdGNoX2xpc3QgdGgge1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkOyAgICBcbn1cblxuI3ByZXBhcmVfYmF0Y2hfbGlzdCB0ciB7XG4gICAgaGVpZ2h0OiAyMHB4XG59Il19 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\nimport { MatTableDataSource} from '@angular/material';\nimport { MatDialog, MatDialogConfig} from '@angular/material';\nimport { BatchService } from '../batch.service';\nimport { BatchItem } from '../batch-item.model';\nimport { AppDialogComponent } from 'src/app/app-dialog/app-dialog.component';\n//import { MatTable } from '@angular/material';\n\n\n\n@Component({\n  selector: 'app-prepare-batch',\n  templateUrl: './prepare-batch.component.html',\n  styleUrls: ['./prepare-batch.component.css']\n})\nexport class PrepareBatchComponent implements OnInit {\n  //@ViewChild(MatTable) table: MatTable<any>;\n  prepareBatchForm: FormGroup;\n  batchName = \"\";\n  displayedColumns: string[] = ['serial_no1', 'audited1','serial_no2','audited2','serial_no3','audited3','serial_no4','audited4','serial_no5','audited5','serial_no6','audited6'];  \n  //dataSource = new BehaviorSubject([]);\n  dataSource = new MatTableDataSource<BatchItem>();\n  \n  batch: BatchItem[] = [];\n  displayBatchSection = false;\n  lastSerialNumber = 0;\n  start = 0\n  end = 100;\n  today: number;\n\n  constructor(private batchService: BatchService, private dialog:MatDialog) { }\n\n  ngOnInit() {\n    this.prepareBatchForm = new FormGroup({\n      batch_name: new FormControl(''),\n      starting_serial_no: new FormControl(''),\n      ending_serial_no: new FormControl('')\n    });  \n\n    this.batchService.getLastSerial().subscribe(responseData => {\n      if(responseData.data.lastserialnuber) {\n        this.lastSerialNumber = responseData.data.lastserialnuber;\n        this.prepareBatchForm.patchValue({\n          starting_serial_no: this.lastSerialNumber\n        });\n        this.prepareBatchForm.get('starting_serial_no').disable();\n      }      \n    })\n  }\n\n  onSubmit() {     \n    let start = this.lastSerialNumber;\n    let end = this.prepareBatchForm.value.ending_serial_no;\n    this.batchName = this.prepareBatchForm.value.batch_name;\n    \n    this.dataSource.data = this.batchService.prepareBatchDataSource(start, end);\n    if(this.dataSource.data.length) {\n      this.displayBatchSection = true;\n    }\n    \n    //this.dataSource.next([...this.data]);\n    //this.dataSource.paginator = this.data;\n    this.today = Date.now();\n  }\n\n  openDialog() {\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.data = {\n      id: 1,\n      title: 'Angular For Beginners'\n    };\n\n    const dialogRef = this.dialog.open(AppDialogComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe( data => console.log(data));\n  }\n\n  \n\n\n}\n","module.exports = \"table {\\n    width: 100%;\\n  }\\n\\n  #view_batch_list {\\n    width:95%;    \\n    padding-top:0px;\\n    margin-top:10px;\\n}\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkL2JhdGNoL3ZpZXctYmF0Y2gvdmlldy1iYXRjaC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksV0FBVztFQUNiOztFQUVBO0lBQ0UsU0FBUztJQUNULGVBQWU7SUFDZixlQUFlO0FBQ25CIiwiZmlsZSI6InNyYy9hcHAvZGFzaGJvYXJkL2JhdGNoL3ZpZXctYmF0Y2gvdmlldy1iYXRjaC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG5cbiAgI3ZpZXdfYmF0Y2hfbGlzdCB7XG4gICAgd2lkdGg6OTUlOyAgICBcbiAgICBwYWRkaW5nLXRvcDowcHg7XG4gICAgbWFyZ2luLXRvcDoxMHB4O1xufVxuXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { MatTableDataSource} from '@angular/material';\nimport { BatchService } from '../batch.service';\nimport { map } from 'rxjs/operators';\nimport { NavListService } from 'src/app/navigation/navlist.service';\n\n@Component({\n  selector: 'app-view-batch',\n  templateUrl: './view-batch.component.html',\n  styleUrls: ['./view-batch.component.css']\n})\nexport class ViewBatchComponent implements OnInit {\n  displayedColumns: string[] = ['batchname', 'serial_start','serial_end','total_cylinders'];  \n  //dataSource = new BehaviorSubject([]);\n  dataSource = new MatTableDataSource<any>();\n\n  constructor(private batchService: BatchService,private navListService: NavListService) { }\n\n  ngOnInit() {\n    let nav = {\n      name: 'batch',\n      title: 'Batches',\n      url: '/viewbatch',\n      sidenav: [\n          { name: 'Prepare Batch', url: '/preparebatch' },\n          { name: 'Create Batch', url: '/createbatch' },\n          { name: 'View Batch', url: '/viewbatch' }\n      ]\n  };\n    this.navListService.onNavListChange(nav);\n    this.batchService.getBatchList()\n      .pipe(map(responseData => {\n        const batchesArray = [];\n\n        for(const key in responseData.data.batches) {\n          const batch = responseData.data.batches[key];\n          const total_cylinders = parseInt(batch.serial_end) - parseInt(batch.serial_start);\n\n          batchesArray.push({\n            batchname: batch.batchname,\n            serial_start: batch.serial_start,\n            serial_end: batch.serial_end,\n            total_cylinders: total_cylinders + 1\n          });\n        }\n\n        return batchesArray;\n\n      }))\n      .subscribe(batches => {        \n        this.dataSource.data = batches;\n      }\n    );\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { NavListService } from '../navigation/navlist.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n    \n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9xdWFsaXR5LWF1ZGl0L21vZGlmeS1yZWplY3Rpb25zL21vZGlmeS1yZWplY3Rpb25zLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { BatchService } from '../../batch/batch.service';\nimport { MatDialog } from '@angular/material';\nimport { map } from 'rxjs/operators';\nimport { AppDialogComponent } from 'src/app/app-dialog/app-dialog.component';\n\n@Component({\n  selector: 'app-modify-rejections',\n  templateUrl: './modify-rejections.component.html',\n  styleUrls: ['./modify-rejections.component.css']\n})\nexport class ModifyRejectionsComponent implements OnInit {\n  searchSerialNoForm: FormGroup;\n  modifyRejectionsForm: FormGroup;\n  showRejectForm = false;\n  batches = [];\n  rejection_types: any[] = [\n    {value: 'HST', viewValue: 'HST'},\n    {value: 'Pneumatic', viewValue: 'Pneumatic Test'},\n    {value: 'BIS', viewValue: 'BIS Audit'},\n    {value: 'Custom', viewValue: 'Custom'}\n  ];\n  status_list: any[] = [\n    {value: 'Rejected', viewValue: 'Rejected'},\n    {value: 'OK', viewValue: 'OK'}\n  ];\n\n  constructor(private batchService: BatchService, private dialog: MatDialog) { }\n\n  ngOnInit() {\n    this.searchSerialNoForm = new FormGroup({\n      serialno: new FormControl('')\n    });  \n\n    this.modifyRejectionsForm = new FormGroup({\n      batchname: new FormControl(''),\n      serialnumber: new FormControl(''),\n      rejectiontype: new FormControl(''),\n      status: new FormControl(''),\n      comments: new FormControl('')\n    });  \n\n    this.batchService.getBatchList()\n    .subscribe(responseData => {\n      this.batches = responseData.data.batches;      \n    });\n\n    this.modifyRejectionsForm.patchValue({\n      status: \"Rejected\"\n    });\n  }\n\n  invalidSerialNumber() {\n    let dialogRef = this.dialog.open(AppDialogComponent, { \n      data: {\n        description: \"Serial number can not find in any batch.\"\n      }\n    });\n    this.showRejectForm = false;   \n  }\n\n  onSearchClick() {\n    \n    if(this.batches.length) {\n      const serialno = parseInt(this.searchSerialNoForm.value.serialno);\n      const searchBatch = this.batches.find(element => {\n        if(parseInt(element.serial_start) <= serialno && parseInt(element.serial_end) >= serialno) {\n          return element;\n        }\n      });\n\n      if(searchBatch && searchBatch.batchname) {\n        this.showRejectForm = true;\n        this.modifyRejectionsForm.patchValue({\n          batchname: searchBatch.batchname,\n          serialnumber: serialno\n        });        \n      } else {\n        this.invalidSerialNumber();           \n      }           \n    } else {\n      this.invalidSerialNumber();    \n    }    \n  }\n\n  onRejectSubmit() {\n    this.batchService.rejectCylinder(this.modifyRejectionsForm.value).subscribe(responseData => {\n      let message = \"\";\n\n      if(responseData.status == \"1\") {\n        message = \"Cylinder has been rejected.\";\n      } else if(responseData.status == \"2\") {\n        message = \"cylinder already present in the rejected list. if you want to modify, please use modify rejections page.\";\n      } else {  \n        message = \"Failed to reject cylinder.\"\n      }\n\n      let dialogRef = this.dialog.open(AppDialogComponent, { \n        data: {\n          description: message\n        }\n      });\n    })\n  }\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9xdWFsaXR5LWF1ZGl0L3JlamVjdC1jeWxpbmRlcnMvcmVqZWN0LWN5bGluZGVycy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { BatchService } from '../../batch/batch.service';\nimport { MatDialog } from '@angular/material';\nimport { map } from 'rxjs/operators';\nimport { AppDialogComponent } from 'src/app/app-dialog/app-dialog.component';\n\n@Component({\n  selector: 'app-reject-cylinders',\n  templateUrl: './reject-cylinders.component.html',\n  styleUrls: ['./reject-cylinders.component.css']\n})\nexport class RejectCylindersComponent implements OnInit {\n  searchSerialNoForm: FormGroup;\n  rejectCylinderForm: FormGroup;\n  showRejectForm = false;\n  batches = [];\n  rejection_types: any[] = [\n    {value: 'HST', viewValue: 'HST'},\n    {value: 'Pneumatic', viewValue: 'Pneumatic Test'},\n    {value: 'BIS', viewValue: 'BIS Audit'},\n    {value: 'Custom', viewValue: 'Custom'}\n  ];\n\n  constructor(private batchService: BatchService, private dialog: MatDialog) { }\n\n  ngOnInit() {\n    this.searchSerialNoForm = new FormGroup({\n      serialno: new FormControl('')\n    });  \n\n    this.rejectCylinderForm = new FormGroup({\n      batchname: new FormControl(''),\n      serialnumber: new FormControl(''),\n      rejectiontype: new FormControl(''),\n      comments: new FormControl('')\n    });  \n\n    this.batchService.getBatchList()\n    .subscribe(responseData => {\n      this.batches = responseData.data.batches;\n      \n    }\n  );\n  }\n\n  invalidSerialNumber() {\n    let dialogRef = this.dialog.open(AppDialogComponent, { \n      data: {\n        description: \"Serial number can not find in any batch.\"\n      }\n    });\n    this.showRejectForm = false;   \n  }\n\n  onSearchClick() {\n    \n    if(this.batches.length) {\n      const serialno = parseInt(this.searchSerialNoForm.value.serialno);\n      const searchBatch = this.batches.find(element => {\n        if(parseInt(element.serial_start) <= serialno && parseInt(element.serial_end) >= serialno) {\n          return element;\n        }\n      });\n\n      if(searchBatch && searchBatch.batchname) {\n        this.showRejectForm = true;\n        this.rejectCylinderForm.patchValue({\n          batchname: searchBatch.batchname,\n          serialnumber: serialno\n        });        \n      } else {\n        this.invalidSerialNumber();           \n      }           \n    } else {\n      this.invalidSerialNumber();    \n    }\n    \n  }\n\n  onRejectSubmit() {\n    this.batchService.rejectCylinder(this.rejectCylinderForm.value).subscribe(responseData => {\n      let message = \"\";\n      this.showRejectForm = false;\n      this.rejectCylinderForm.reset();\n      this.searchSerialNoForm.reset();\n\n      if(responseData.status == \"1\") {\n        message = \"Cylinder has been rejected.\";\n      } else if(responseData.status == \"2\") {\n        message = \"cylinder already present in the rejected list. if you want to modify, please use modify rejections page.\";\n      } else {  \n        message = \"Failed to reject cylinder.\"\n      }\n\n      let dialogRef = this.dialog.open(AppDialogComponent, { \n        data: {\n          description: message\n        }\n      });\n    })\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9xdWFsaXR5LWF1ZGl0L3JlamVjdGVkLWN5bGluZGVycy9yZWplY3RlZC1jeWxpbmRlcnMuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { BatchService } from '../../batch/batch.service';\nimport { MatDialog, MatTableDataSource } from '@angular/material';\nimport { AppDialogComponent } from 'src/app/app-dialog/app-dialog.component';\n\n@Component({\n  selector: 'app-rejected-cylinders',\n  templateUrl: './rejected-cylinders.component.html',\n  styleUrls: ['./rejected-cylinders.component.css']\n})\nexport class RejectedCylindersComponent implements OnInit {\n  searchBatchNameForm: FormGroup;\n  filterForm: FormGroup;\n  searchData = [];\n  displayRejectedCylinders = false;\n  dataSource = new MatTableDataSource<any>();\n  displayedColumns: string[] = ['position','batchname', 'serial_number','rejection_type','comments'];  \n  rejection_types : any[] = ['All'];\n\n  constructor(private batchService: BatchService, private dialog: MatDialog) { }\n\n  ngOnInit() {\n    this.searchBatchNameForm = new FormGroup({\n      batchname: new FormControl('')\n    });  \n    this.filterForm = new FormGroup({\n      filterValue: new FormControl('')\n    });\n\n    this.filterForm.patchValue({\n      filterValue: 'All'\n    });\n    this.displayRejectedCylinders = false;\n  }\n\n  onSearchClick() {\n    let data = {\n      \"batchname\": this.searchBatchNameForm.value.batchname\n    }\n    \n    this.batchService.rejectedCylindersList(data).subscribe(responseData => {\n      if(responseData.status == '1') {     \n        this.displayRejectedCylinders = true; \n        this.filterForm.patchValue({\n          filterValue: 'All'\n        });\n        this.searchData = this.dataSource.data = responseData.data.rejectionslist;\n        let rejection_types_array = this.dataSource.data.map(element => element.rejection_type);\n        rejection_types_array = [...new Set(rejection_types_array)];\n        this.rejection_types = ['All',...rejection_types_array];\n        this.searchBatchNameForm.reset();\n      } else {\n        this.displayRejectedCylinders = false;\n        var message = \"No Data Found\";\n        let dialogRef = this.dialog.open(AppDialogComponent, { \n          data: {\n            description: message\n          }\n        });\n      }\n    })\n  }\n\n  onFilterChange() {\n    const value = this.filterForm.value.filterValue;\n    if(value == 'All') {\n      this.dataSource.data = this.searchData;\n    }  else {\n      this.dataSource.data = this.searchData.filter(element => element.rejection_type == value);\n    }\n\n  }\n\n}\n","module.exports = \"table {\\n    border-left: 1px solid #000;\\n    border-top: 1px solid #000;\\n}\\n#hst_reports th, #hst_reports td {\\n    color: #000;\\n    border-right:1px solid #000;\\n    border-bottom: 1px solid #000;  \\n    width: 70px;    \\n    padding: 0px 5px;    \\n}\\n#hst_reports th {\\n    font-weight: bold;    \\n}\\n#hst_reports tr {\\n    height: 20px\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkL3JlcG9ydHMvaHN0cmVwb3J0cy9oc3RyZXBvcnRzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSwyQkFBMkI7SUFDM0IsMEJBQTBCO0FBQzlCO0FBQ0E7SUFDSSxXQUFXO0lBQ1gsMkJBQTJCO0lBQzNCLDZCQUE2QjtJQUM3QixXQUFXO0lBQ1gsZ0JBQWdCO0FBQ3BCO0FBRUE7SUFDSSxpQkFBaUI7QUFDckI7QUFFQTtJQUNJO0FBQ0oiLCJmaWxlIjoic3JjL2FwcC9kYXNoYm9hcmQvcmVwb3J0cy9oc3RyZXBvcnRzL2hzdHJlcG9ydHMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcbiAgICBib3JkZXItbGVmdDogMXB4IHNvbGlkICMwMDA7XG4gICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICMwMDA7XG59XG4jaHN0X3JlcG9ydHMgdGgsICNoc3RfcmVwb3J0cyB0ZCB7XG4gICAgY29sb3I6ICMwMDA7XG4gICAgYm9yZGVyLXJpZ2h0OjFweCBzb2xpZCAjMDAwO1xuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjMDAwOyAgXG4gICAgd2lkdGg6IDcwcHg7ICAgIFxuICAgIHBhZGRpbmc6IDBweCA1cHg7ICAgIFxufVxuXG4jaHN0X3JlcG9ydHMgdGgge1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkOyAgICBcbn1cblxuI2hzdF9yZXBvcnRzIHRyIHtcbiAgICBoZWlnaHQ6IDIwcHhcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { BatchItem } from '../../batch/batch-item.model';\nimport { BatchService } from '../../batch/batch.service';\nimport { Batch } from '../../batch/batch.model';\n\n@Component({\n  selector: 'app-hstreports',\n  templateUrl: './hstreports.component.html',\n  styleUrls: ['./hstreports.component.css']\n})\nexport class HstreportsComponent implements OnInit {\n\n  showHSTReport = false;\n  generateReportForm: FormGroup;\n  batchesList = [];\n  batch: any;\n  batchName = \"\";\n  displayedColumns: string[] = ['serial_no1', 'status1','serial_no2','status2','serial_no3','status3','serial_no4','status4','serial_no5','status5','serial_no6','status6'];  \n  //dataSource = new BehaviorSubject([]);\n  dataSource = new MatTableDataSource<BatchItem>();\n  serial_start;\n  serial_end;\n\n  constructor(private batchService: BatchService) { }\n\n  ngOnInit() {\n    this.generateReportForm = new FormGroup({\n      batch_name: new FormControl('')\n    });\n\n    this.batchService.getBatchList().subscribe(responseData => {\n      if(responseData.status == \"1\") {\n        this.batchesList = responseData.data.batches;\n      }\n    });  \n  }\n\n  onGenerateClick() {\n   \n    this.batchName = this.generateReportForm.value.batch_name;\n\n    let data = {\n      \"batchname\": this.batchName\n    };\n\n    this.batch = this.batchesList.find(element => element.batchname == this.batchName);  \n    this.serial_start = this.batch.serial_start;\n    this.serial_end = this.batch.serial_end;\n      \n    this.batchService.rejectedCylindersList(data).subscribe(responseData => {\n      let rejectionsList = {};\n      if(responseData.status == '1') {    \n          rejectionsList = responseData.data.rejectionslist\n      } \n\n      this.dataSource.data = this.batchService.prepareReportDataSource(this.batch.serial_start, this.batch.serial_end, \"HST\", rejectionsList);    \n      this.showHSTReport = true;\n    }) \n  }\n\n}\n","module.exports = \"table {\\n    border-left: 1px solid #000;\\n    border-top: 1px solid #000;\\n}\\n#hst_reports th, #hst_reports td {\\n    color: #000;\\n    border-right:1px solid #000;\\n    border-bottom: 1px solid #000;  \\n    width: 70px;    \\n    padding: 0px 5px;    \\n}\\n#hst_reports th {\\n    font-weight: bold;    \\n}\\n#hst_reports tr {\\n    height: 20px\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkL3JlcG9ydHMvcG5ldW1hdGljL3BuZXVtYXRpY3JlcG9ydC9wbmV1bWF0aWNyZXBvcnQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLDJCQUEyQjtJQUMzQiwwQkFBMEI7QUFDOUI7QUFDQTtJQUNJLFdBQVc7SUFDWCwyQkFBMkI7SUFDM0IsNkJBQTZCO0lBQzdCLFdBQVc7SUFDWCxnQkFBZ0I7QUFDcEI7QUFFQTtJQUNJLGlCQUFpQjtBQUNyQjtBQUVBO0lBQ0k7QUFDSiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9yZXBvcnRzL3BuZXVtYXRpYy9wbmV1bWF0aWNyZXBvcnQvcG5ldW1hdGljcmVwb3J0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XG4gICAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAjMDAwO1xuICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAjMDAwO1xufVxuI2hzdF9yZXBvcnRzIHRoLCAjaHN0X3JlcG9ydHMgdGQge1xuICAgIGNvbG9yOiAjMDAwO1xuICAgIGJvcmRlci1yaWdodDoxcHggc29saWQgIzAwMDtcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgIzAwMDsgIFxuICAgIHdpZHRoOiA3MHB4OyAgICBcbiAgICBwYWRkaW5nOiAwcHggNXB4OyAgICBcbn1cblxuI2hzdF9yZXBvcnRzIHRoIHtcbiAgICBmb250LXdlaWdodDogYm9sZDsgICAgXG59XG5cbiNoc3RfcmVwb3J0cyB0ciB7XG4gICAgaGVpZ2h0OiAyMHB4XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { BatchItem } from '../../../batch/batch-item.model';\nimport { BatchService } from '../../../batch/batch.service';\nimport { Batch } from '../../../batch/batch.model';\n\n\n@Component({\n  selector: 'app-pneumaticreport',\n  templateUrl: './pneumaticreport.component.html',\n  styleUrls: ['./pneumaticreport.component.css']\n})\nexport class PneumaticreportComponent implements OnInit {\n\n  showHSTReport = false;\n  generateReportForm: FormGroup;\n  batchesList = [];\n  batch: any;\n  batchName = \"\";\n  displayedColumns: string[] = ['serial_no1', 'status1','serial_no2','status2','serial_no3','status3','serial_no4','status4','serial_no5','status5','serial_no6','status6'];  \n  //dataSource = new BehaviorSubject([]);\n  dataSource = new MatTableDataSource<BatchItem>();\n\n  constructor(private batchService: BatchService) { }\n\n  ngOnInit() {\n    this.generateReportForm = new FormGroup({\n      batch_name: new FormControl('')\n    });\n\n    this.batchService.getBatchList().subscribe(responseData => {\n      if(responseData.status == \"1\") {\n        this.batchesList = responseData.data.batches;\n      }\n    });  \n  }\n\n  onGenerateClick() {   \n    this.batchName = this.generateReportForm.value.batch_name;\n\n    let data = {\n      \"batchname\": this.batchName\n    };\n\n    this.batch = this.batchesList.find(element => element.batchname == this.batchName);  \n      \n    this.batchService.rejectedCylindersList(data).subscribe(responseData => {\n      let rejectionsList = {};\n      if(responseData.status == '1') {    \n          rejectionsList = responseData.data.rejectionslist\n      } \n\n      this.dataSource.data = this.batchService.prepareReportDataSource(this.batch.serial_start, this.batch.serial_end, \"Pneumatic\", rejectionsList);    \n      this.showHSTReport = true;\n    }) \n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9yZXBvcnRzL3RhcmV3ZWlnaHQvdGFyZXdlaWdodC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { BatchService } from '../../batch/batch.service';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { MatTableDataSource } from '@angular/material';\nimport { BatchItem } from '../../batch/batch-item.model';\n\n@Component({\n  selector: 'app-tareweight',\n  templateUrl: './tareweight.component.html',\n  styleUrls: ['./tareweight.component.css']\n})\nexport class TareweightComponent implements OnInit {\n  tareweightReportForm: FormGroup;\n  dataSource = new MatTableDataSource<BatchItem>();\n  batchesList = [];\n  batchName = \"\";\n  batch: any;\n\n  constructor(private batchService: BatchService) { }\n\n  ngOnInit() {\n    this.tareweightReportForm = new FormGroup({\n      batch_name: new FormControl('')\n    });\n\n    this.batchService.getBatchList().subscribe(responseData => {\n      if(responseData.status == \"1\") {\n        this.batchesList = responseData.data.batches;\n      }\n    });  \n  }\n\n  onGenerateClick() {\n   \n    this.batchName = this.tareweightReportForm.value.batch_name;\n\n    let data = {\n      \"batchname\": this.batchName\n    };\n\n    this.batch = this.batchesList.find(element => element.batchname == this.batchName);  \n    \n      \n    this.batchService.tareweightCylindersList(data).subscribe(responseData => {\n      console.log(responseData);\n    }) \n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport {\n  MatButtonModule,\n  MatIconModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatCheckboxModule,\n  MatMenuModule,\n  MatToolbarModule,\n  MatCardModule,\n  MatProgressSpinnerModule,\n  MatSidenavModule,\n  MatListModule,\n  MatTableModule,\n  MatDialogModule,\n  MatSelectModule\n} from '@angular/material';\n\n@NgModule({\n  imports: [\n    MatButtonModule, \n    MatListModule, \n    MatIconModule, \n    MatFormFieldModule, \n    MatInputModule,\n    MatCheckboxModule, \n    MatMenuModule, \n    MatToolbarModule,\n    MatCardModule,\n    MatProgressSpinnerModule,\n    MatSidenavModule,\n    MatTableModule,\n    MatDialogModule,\n    MatSelectModule\n  ],\n  exports: [\n    MatButtonModule, \n    MatListModule, \n    MatIconModule, \n    MatFormFieldModule, \n    MatInputModule,\n    MatCheckboxModule, \n    MatMenuModule, \n    MatToolbarModule, \n    MatCardModule,\n    MatProgressSpinnerModule,\n    MatSidenavModule,\n    MatTableModule,\n    MatDialogModule,\n    MatSelectModule\n  ]\n})\nexport class MaterialModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25hdmlnYXRpb24vaGVhZGVyL2hlYWRlci5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { Subscription } from 'rxjs/Subscription';\nimport { NavListService } from \"../navlist.service\";\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit,OnDestroy {\n  isAuth:boolean;\n  authSubscription: Subscription;\n  navList = [];\n  constructor(private authService: AuthService, private navListService: NavListService) { }\n\n  ngOnInit() {\n    this.authSubscription = this.authService.authChange.subscribe(authChange => {\n      this.isAuth = authChange;\n    });\n    this.navList = this.navListService.getNavList();\n  }\n\n  navBarClick(nav) {\n    nav.disabled = true;\n    this.navListService.onNavListChange(nav);\n  }\n\n  onLogout() {\n    this.authService.logout();\n  }\n\n  ngOnDestroy() {\n    this.authSubscription.unsubscribe();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\n\n@Injectable()\n\nexport class NavListService {\n    selectedNav;\n    navListChange = new Subject<any>();  \n    navList = [\n        {\n            name: 'batch',\n            title: 'Batches',\n            url: '/viewbatch',\n            color:\"basic\",\n            sidenav: [\n                { name: 'Prepare Batch', url: '/preparebatch' },\n                { name: 'Create Batch', url: '/createbatch' },\n                { name: 'View Batch', url: '/viewbatch' }\n            ]\n        },\n        {\n            name: 'quality_audit',\n            title: 'Quality Audit',\n            url: '/rejectcylinders',\n            color:\"basic\",\n            sidenav: [\n                { name: 'Reject Cylinders', url: '/rejectcylinders' },\n                { name: 'Modify Rejections', url: '/modifyrejections' },\n                { name: 'Rejected Cylinders', url: '/rejectedcylinders' }\n            ]\n        },\n        {\n            name: 'barcode',\n            title: 'BarCode',\n            url: '/printbarcode',\n            color:\"basic\",\n            sidenav: [\n                { name: 'Print BarCode', url: '/printbarcode' }\n            ]            \n        },\n        {\n            name: 'reports',\n            title: 'Reports',\n            url: '/hstreport',\n            color:\"basic\",\n            sidenav: [\n                {name: 'HST Report', url: '/hstreport'},\n                {name: 'Pneumatic Report', url: '/pneumaticreport'},\n                {name: 'Tare Weight Report', url: '/tareweight'}\n            ]\n       /* },\n        {\n            name: 'dispatch',\n            title: 'Dispatch',\n            url: '/preparebatch',\n            disabled\n            sidenav: [\n                { name: 'D1', url: '/preparebatch' },\n                { name: 'D2', url: '/createbatch' },\n                { name: 'D3', url: '/viewbatch' }\n            ]\n            */\n        }\n    ];\n        \n\n    constructor() {}\n\n    onNavListChange(navList:any) {        \n        this.navList.map(element => {\n            if(element.name == navList.name) {\n                element.color = \"warn\";                   \n            } else {\n                element.color = \"basic\";                    \n            }\n            return element;\n        });             \n      \n        this.navListChange.next(navList) \n    }\n\n    getNavList() {\n        return this.navList;\n    }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25hdmlnYXRpb24vc2lkZW5hdi9zaWRlbmF2LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.css']\n})\nexport class SidenavComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n \n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport 'hammerjs';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}